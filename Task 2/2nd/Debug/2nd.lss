
2nd.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000ea4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000044  00800060  00000ea4  00000f38  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  008000a4  008000a4  00000f7c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000f7c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000fac  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000088  00000000  00000000  00000fe8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001844  00000000  00000000  00001070  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006f4  00000000  00000000  000028b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000010ae  00000000  00000000  00002fa8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001b0  00000000  00000000  00004058  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003b7  00000000  00000000  00004208  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000c38  00000000  00000000  000045bf  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  000051f7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 ea       	ldi	r30, 0xA4	; 164
  68:	fe e0       	ldi	r31, 0x0E	; 14
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a4 3a       	cpi	r26, 0xA4	; 164
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a4 ea       	ldi	r26, 0xA4	; 164
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a8 3a       	cpi	r26, 0xA8	; 168
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 f6 06 	call	0xdec	; 0xdec <main>
  8a:	0c 94 50 07 	jmp	0xea0	; 0xea0 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <ENABLE>:
		DDRB = 0xFF;							//Make PORTB in output mode so we can write on it after that
	}

	void ENABLE()
	{
		PORTD |= 1<<EN;
  92:	95 9a       	sbi	0x12, 5	; 18
		asm volatile ("nop");
  94:	00 00       	nop
		asm volatile ("nop");				    // A Time to make the lcd read the process
  96:	00 00       	nop
		PORTD &= ~1<<EN;
  98:	82 b3       	in	r24, 0x12	; 18
  9a:	80 7c       	andi	r24, 0xC0	; 192
  9c:	82 bb       	out	0x12, r24	; 18
  9e:	08 95       	ret

000000a0 <BUSY>:
	 
}

	void BUSY()
	{
		DDRB = 0x00;                            //Make PORTB input to read fro it if its busy or not .
  a0:	17 ba       	out	0x17, r1	; 23
		PORTD |= 1<<RW;							// We turn RW on so we can read.
  a2:	97 9a       	sbi	0x12, 7	; 18
		PORTD &= ~1<<RS;                        // Command mode.
  a4:	82 b3       	in	r24, 0x12	; 18
  a6:	88 7f       	andi	r24, 0xF8	; 248
  a8:	82 bb       	out	0x12, r24	; 18

		while (PORTB>= 0x80)
  aa:	c7 9b       	sbis	0x18, 7	; 24
  ac:	04 c0       	rjmp	.+8      	; 0xb6 <BUSY+0x16>
		{
			ENABLE();
  ae:	0e 94 49 00 	call	0x92	; 0x92 <ENABLE>
	{
		DDRB = 0x00;                            //Make PORTB input to read fro it if its busy or not .
		PORTD |= 1<<RW;							// We turn RW on so we can read.
		PORTD &= ~1<<RS;                        // Command mode.

		while (PORTB>= 0x80)
  b2:	c7 99       	sbic	0x18, 7	; 24
  b4:	fc cf       	rjmp	.-8      	; 0xae <BUSY+0xe>
		{
			ENABLE();
		}
		DDRB = 0xFF;							//Make PORTB in output mode so we can write on it after that
  b6:	8f ef       	ldi	r24, 0xFF	; 255
  b8:	87 bb       	out	0x17, r24	; 23
  ba:	08 95       	ret

000000bc <Send_A_Command>:
		asm volatile ("nop");				    // A Time to make the lcd read the process
		PORTD &= ~1<<EN;
	}

	void Send_A_Command(unsigned char command)
	{
  bc:	cf 93       	push	r28
  be:	c8 2f       	mov	r28, r24
		BUSY();
  c0:	0e 94 50 00 	call	0xa0	; 0xa0 <BUSY>
		PORTB = command;						// Writing the command from the data sheet.
  c4:	c8 bb       	out	0x18, r28	; 24
		PORTD &= ~ ((1<<RW)|(1<<RS));			// We turn RW off so we can write and We turn RS off for command mode .
  c6:	82 b3       	in	r24, 0x12	; 18
  c8:	8b 77       	andi	r24, 0x7B	; 123
  ca:	82 bb       	out	0x12, r24	; 18
		ENABLE();                               // We turn on the enable and then turn it off.
  cc:	0e 94 49 00 	call	0x92	; 0x92 <ENABLE>
		PORTB = 0x00;
  d0:	18 ba       	out	0x18, r1	; 24
	}
  d2:	cf 91       	pop	r28
  d4:	08 95       	ret

000000d6 <Send_A_Character>:

	void Send_A_Character(unsigned char character)
	{
  d6:	cf 93       	push	r28
  d8:	c8 2f       	mov	r28, r24
		BUSY();
  da:	0e 94 50 00 	call	0xa0	; 0xa0 <BUSY>
		PORTB = character;					    // Writing the character from the data sheet.
  de:	c8 bb       	out	0x18, r28	; 24
		PORTD &= ~ (1<<RW);						// We turn RW off so we can write.
  e0:	97 98       	cbi	0x12, 7	; 18
		PORTD |= 1<<RS;							// We turn RS off for command mode and on for character mode.
  e2:	92 9a       	sbi	0x12, 2	; 18
		ENABLE();								// We turn on the enable and then turn it off.
  e4:	0e 94 49 00 	call	0x92	; 0x92 <ENABLE>
		PORTB= 0x00;
  e8:	18 ba       	out	0x18, r1	; 24
	}
  ea:	cf 91       	pop	r28
  ec:	08 95       	ret

000000ee <Send_A_String>:
	void Send_A_String(unsigned char *stringcharacter)
	{
  ee:	cf 93       	push	r28
  f0:	df 93       	push	r29
  f2:	ec 01       	movw	r28, r24
		while(*stringcharacter>0)
  f4:	88 81       	ld	r24, Y
  f6:	88 23       	and	r24, r24
  f8:	31 f0       	breq	.+12     	; 0x106 <Send_A_String+0x18>
  fa:	21 96       	adiw	r28, 0x01	; 1
		{
			Send_A_Character(*stringcharacter++) ;
  fc:	0e 94 6b 00 	call	0xd6	; 0xd6 <Send_A_Character>
		ENABLE();								// We turn on the enable and then turn it off.
		PORTB= 0x00;
	}
	void Send_A_String(unsigned char *stringcharacter)
	{
		while(*stringcharacter>0)
 100:	89 91       	ld	r24, Y+
 102:	81 11       	cpse	r24, r1
 104:	fb cf       	rjmp	.-10     	; 0xfc <Send_A_String+0xe>
		{
			Send_A_Character(*stringcharacter++) ;
		}
	}
 106:	df 91       	pop	r29
 108:	cf 91       	pop	r28
 10a:	08 95       	ret

0000010c <key1>:
	// keys code ,                                                       key 1

void key1()
{
 10c:	0f 93       	push	r16
 10e:	1f 93       	push	r17
 110:	cf 93       	push	r28
 112:	df 93       	push	r29
	uint8_t x=150 ;
	pressed=1 ;
 114:	81 e0       	ldi	r24, 0x01	; 1
 116:	80 93 a5 00 	sts	0x00A5, r24	; 0x8000a5 <pressed>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 11a:	8b e7       	ldi	r24, 0x7B	; 123
 11c:	92 e9       	ldi	r25, 0x92	; 146
 11e:	01 97       	sbiw	r24, 0x01	; 1
 120:	f1 f7       	brne	.-4      	; 0x11e <key1+0x12>
 122:	00 c0       	rjmp	.+0      	; 0x124 <key1+0x18>
 124:	00 00       	nop
	while(pressed==1)
	{
		Send_A_Command(0x80+z) ;
		Send_A_String("a");
		
		if (PINA==pad[0])
 126:	c0 e6       	ldi	r28, 0x60	; 96
 128:	d0 e0       	ldi	r29, 0x00	; 0
			pressed=2;
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
 12a:	05 e0       	ldi	r16, 0x05	; 5
		Send_A_Command(0x80+z) ;
		Send_A_String("a");
		
		if (PINA==pad[0])
		{
			pressed=2;
 12c:	12 e0       	ldi	r17, 0x02	; 2
 12e:	21 c0       	rjmp	.+66     	; 0x172 <key1+0x66>
	uint8_t x=150 ;
	pressed=1 ;
	_delay_ms(x);
	while(pressed==1)
	{
		Send_A_Command(0x80+z) ;
 130:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <__data_end>
 134:	80 58       	subi	r24, 0x80	; 128
 136:	0e 94 5e 00 	call	0xbc	; 0xbc <Send_A_Command>
		Send_A_String("a");
 13a:	89 e6       	ldi	r24, 0x69	; 105
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	0e 94 77 00 	call	0xee	; 0xee <Send_A_String>
		
		if (PINA==pad[0])
 142:	99 b3       	in	r25, 0x19	; 25
 144:	88 81       	ld	r24, Y
 146:	98 13       	cpse	r25, r24
 148:	09 c0       	rjmp	.+18     	; 0x15c <key1+0x50>
		{
			pressed=2;
 14a:	10 93 a5 00 	sts	0x00A5, r17	; 0x8000a5 <pressed>
 14e:	8b e7       	ldi	r24, 0x7B	; 123
 150:	92 e9       	ldi	r25, 0x92	; 146
 152:	01 97       	sbiw	r24, 0x01	; 1
 154:	f1 f7       	brne	.-4      	; 0x152 <key1+0x46>
 156:	00 c0       	rjmp	.+0      	; 0x158 <key1+0x4c>
 158:	00 00       	nop
 15a:	0b c0       	rjmp	.+22     	; 0x172 <key1+0x66>
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
 15c:	99 b3       	in	r25, 0x19	; 25
 15e:	88 85       	ldd	r24, Y+8	; 0x08
 160:	98 13       	cpse	r25, r24
 162:	07 c0       	rjmp	.+14     	; 0x172 <key1+0x66>
 164:	8c b5       	in	r24, 0x2c	; 44
 166:	9d b5       	in	r25, 0x2d	; 45
 168:	89 3e       	cpi	r24, 0xE9	; 233
 16a:	9d 4f       	sbci	r25, 0xFD	; 253
 16c:	10 f0       	brcs	.+4      	; 0x172 <key1+0x66>
		pressed=5;
 16e:	00 93 a5 00 	sts	0x00A5, r16	; 0x8000a5 <pressed>
void key1()
{
	uint8_t x=150 ;
	pressed=1 ;
	_delay_ms(x);
	while(pressed==1)
 172:	80 91 a5 00 	lds	r24, 0x00A5	; 0x8000a5 <pressed>
 176:	81 30       	cpi	r24, 0x01	; 1
 178:	d9 f2       	breq	.-74     	; 0x130 <key1+0x24>
	while (pressed==2)
	{
		Send_A_Command(0x80+z) ;
		Send_A_String("b");
		
		if(PINA==pad[0])
 17a:	c0 e6       	ldi	r28, 0x60	; 96
 17c:	d0 e0       	ldi	r29, 0x00	; 0
			pressed=3;
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
 17e:	05 e0       	ldi	r16, 0x05	; 5
		Send_A_Command(0x80+z) ;
		Send_A_String("b");
		
		if(PINA==pad[0])
		{
			pressed=3;
 180:	13 e0       	ldi	r17, 0x03	; 3
 182:	21 c0       	rjmp	.+66     	; 0x1c6 <key1+0xba>
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while (pressed==2)
	{
		Send_A_Command(0x80+z) ;
 184:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <__data_end>
 188:	80 58       	subi	r24, 0x80	; 128
 18a:	0e 94 5e 00 	call	0xbc	; 0xbc <Send_A_Command>
		Send_A_String("b");
 18e:	8b e6       	ldi	r24, 0x6B	; 107
 190:	90 e0       	ldi	r25, 0x00	; 0
 192:	0e 94 77 00 	call	0xee	; 0xee <Send_A_String>
		
		if(PINA==pad[0])
 196:	99 b3       	in	r25, 0x19	; 25
 198:	88 81       	ld	r24, Y
 19a:	98 13       	cpse	r25, r24
 19c:	09 c0       	rjmp	.+18     	; 0x1b0 <key1+0xa4>
		{
			pressed=3;
 19e:	10 93 a5 00 	sts	0x00A5, r17	; 0x8000a5 <pressed>
 1a2:	8b e7       	ldi	r24, 0x7B	; 123
 1a4:	92 e9       	ldi	r25, 0x92	; 146
 1a6:	01 97       	sbiw	r24, 0x01	; 1
 1a8:	f1 f7       	brne	.-4      	; 0x1a6 <key1+0x9a>
 1aa:	00 c0       	rjmp	.+0      	; 0x1ac <key1+0xa0>
 1ac:	00 00       	nop
 1ae:	0b c0       	rjmp	.+22     	; 0x1c6 <key1+0xba>
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
 1b0:	99 b3       	in	r25, 0x19	; 25
 1b2:	88 85       	ldd	r24, Y+8	; 0x08
 1b4:	98 13       	cpse	r25, r24
 1b6:	07 c0       	rjmp	.+14     	; 0x1c6 <key1+0xba>
 1b8:	8c b5       	in	r24, 0x2c	; 44
 1ba:	9d b5       	in	r25, 0x2d	; 45
 1bc:	89 3e       	cpi	r24, 0xE9	; 233
 1be:	9d 4f       	sbci	r25, 0xFD	; 253
 1c0:	10 f0       	brcs	.+4      	; 0x1c6 <key1+0xba>
		pressed=5;
 1c2:	00 93 a5 00 	sts	0x00A5, r16	; 0x8000a5 <pressed>
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while (pressed==2)
 1c6:	80 91 a5 00 	lds	r24, 0x00A5	; 0x8000a5 <pressed>
 1ca:	82 30       	cpi	r24, 0x02	; 2
 1cc:	d9 f2       	breq	.-74     	; 0x184 <key1+0x78>
	while(pressed==3)
	{
		Send_A_Command(0x80+z) ;
		Send_A_String("c");
		
		if(PINA==pad[0])
 1ce:	c0 e6       	ldi	r28, 0x60	; 96
 1d0:	d0 e0       	ldi	r29, 0x00	; 0
			pressed=4;
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
 1d2:	05 e0       	ldi	r16, 0x05	; 5
		Send_A_Command(0x80+z) ;
		Send_A_String("c");
		
		if(PINA==pad[0])
		{
			pressed=4;
 1d4:	14 e0       	ldi	r17, 0x04	; 4
 1d6:	21 c0       	rjmp	.+66     	; 0x21a <key1+0x10e>
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while(pressed==3)
	{
		Send_A_Command(0x80+z) ;
 1d8:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <__data_end>
 1dc:	80 58       	subi	r24, 0x80	; 128
 1de:	0e 94 5e 00 	call	0xbc	; 0xbc <Send_A_Command>
		Send_A_String("c");
 1e2:	8d e6       	ldi	r24, 0x6D	; 109
 1e4:	90 e0       	ldi	r25, 0x00	; 0
 1e6:	0e 94 77 00 	call	0xee	; 0xee <Send_A_String>
		
		if(PINA==pad[0])
 1ea:	99 b3       	in	r25, 0x19	; 25
 1ec:	88 81       	ld	r24, Y
 1ee:	98 13       	cpse	r25, r24
 1f0:	09 c0       	rjmp	.+18     	; 0x204 <key1+0xf8>
		{
			pressed=4;
 1f2:	10 93 a5 00 	sts	0x00A5, r17	; 0x8000a5 <pressed>
 1f6:	8b e7       	ldi	r24, 0x7B	; 123
 1f8:	92 e9       	ldi	r25, 0x92	; 146
 1fa:	01 97       	sbiw	r24, 0x01	; 1
 1fc:	f1 f7       	brne	.-4      	; 0x1fa <key1+0xee>
 1fe:	00 c0       	rjmp	.+0      	; 0x200 <key1+0xf4>
 200:	00 00       	nop
 202:	0b c0       	rjmp	.+22     	; 0x21a <key1+0x10e>
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
 204:	99 b3       	in	r25, 0x19	; 25
 206:	88 85       	ldd	r24, Y+8	; 0x08
 208:	98 13       	cpse	r25, r24
 20a:	07 c0       	rjmp	.+14     	; 0x21a <key1+0x10e>
 20c:	8c b5       	in	r24, 0x2c	; 44
 20e:	9d b5       	in	r25, 0x2d	; 45
 210:	89 3e       	cpi	r24, 0xE9	; 233
 212:	9d 4f       	sbci	r25, 0xFD	; 253
 214:	10 f0       	brcs	.+4      	; 0x21a <key1+0x10e>
		pressed=5;
 216:	00 93 a5 00 	sts	0x00A5, r16	; 0x8000a5 <pressed>
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while(pressed==3)
 21a:	80 91 a5 00 	lds	r24, 0x00A5	; 0x8000a5 <pressed>
 21e:	83 30       	cpi	r24, 0x03	; 3
 220:	d9 f2       	breq	.-74     	; 0x1d8 <key1+0xcc>
	while(pressed==4)
	{
		Send_A_Command(0x80+z) ;
		Send_A_String("d");
		
		if(PINA==pad[0])
 222:	c0 e6       	ldi	r28, 0x60	; 96
 224:	d0 e0       	ldi	r29, 0x00	; 0
			pressed=1;
			_delay_ms(30);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
 226:	05 e0       	ldi	r16, 0x05	; 5
		Send_A_Command(0x80+z) ;
		Send_A_String("d");
		
		if(PINA==pad[0])
		{
			pressed=1;
 228:	11 e0       	ldi	r17, 0x01	; 1
 22a:	21 c0       	rjmp	.+66     	; 0x26e <key1+0x162>
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while(pressed==4)
	{
		Send_A_Command(0x80+z) ;
 22c:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <__data_end>
 230:	80 58       	subi	r24, 0x80	; 128
 232:	0e 94 5e 00 	call	0xbc	; 0xbc <Send_A_Command>
		Send_A_String("d");
 236:	8f e6       	ldi	r24, 0x6F	; 111
 238:	90 e0       	ldi	r25, 0x00	; 0
 23a:	0e 94 77 00 	call	0xee	; 0xee <Send_A_String>
		
		if(PINA==pad[0])
 23e:	99 b3       	in	r25, 0x19	; 25
 240:	88 81       	ld	r24, Y
 242:	98 13       	cpse	r25, r24
 244:	09 c0       	rjmp	.+18     	; 0x258 <key1+0x14c>
		{
			pressed=1;
 246:	10 93 a5 00 	sts	0x00A5, r17	; 0x8000a5 <pressed>
 24a:	8b e4       	ldi	r24, 0x4B	; 75
 24c:	9d e1       	ldi	r25, 0x1D	; 29
 24e:	01 97       	sbiw	r24, 0x01	; 1
 250:	f1 f7       	brne	.-4      	; 0x24e <key1+0x142>
 252:	00 c0       	rjmp	.+0      	; 0x254 <key1+0x148>
 254:	00 00       	nop
 256:	0b c0       	rjmp	.+22     	; 0x26e <key1+0x162>
			_delay_ms(30);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
 258:	99 b3       	in	r25, 0x19	; 25
 25a:	88 85       	ldd	r24, Y+8	; 0x08
 25c:	98 13       	cpse	r25, r24
 25e:	07 c0       	rjmp	.+14     	; 0x26e <key1+0x162>
 260:	8c b5       	in	r24, 0x2c	; 44
 262:	9d b5       	in	r25, 0x2d	; 45
 264:	89 3e       	cpi	r24, 0xE9	; 233
 266:	9d 4f       	sbci	r25, 0xFD	; 253
 268:	10 f0       	brcs	.+4      	; 0x26e <key1+0x162>
		pressed=5;
 26a:	00 93 a5 00 	sts	0x00A5, r16	; 0x8000a5 <pressed>
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while(pressed==4)
 26e:	80 91 a5 00 	lds	r24, 0x00A5	; 0x8000a5 <pressed>
 272:	84 30       	cpi	r24, 0x04	; 4
 274:	d9 f2       	breq	.-74     	; 0x22c <key1+0x120>
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while(pressed==5&&PINA==pad[8])
 276:	85 30       	cpi	r24, 0x05	; 5
 278:	91 f4       	brne	.+36     	; 0x29e <key1+0x192>
 27a:	99 b3       	in	r25, 0x19	; 25
 27c:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <__data_start+0x8>
 280:	98 13       	cpse	r25, r24
 282:	0d c0       	rjmp	.+26     	; 0x29e <key1+0x192>
	{
		z++;
 284:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <__data_end>
 288:	91 e0       	ldi	r25, 0x01	; 1
 28a:	98 0f       	add	r25, r24
 28c:	90 93 a4 00 	sts	0x00A4, r25	; 0x8000a4 <__data_end>
		Send_A_Command(0x80+z)  ;
 290:	8f 57       	subi	r24, 0x7F	; 127
 292:	0e 94 5e 00 	call	0xbc	; 0xbc <Send_A_Command>
		TCNT1 = 0 ;
 296:	1d bc       	out	0x2d, r1	; 45
 298:	1c bc       	out	0x2c, r1	; 44
		pressed=0 ;
 29a:	10 92 a5 00 	sts	0x00A5, r1	; 0x8000a5 <pressed>
	}
}
 29e:	df 91       	pop	r29
 2a0:	cf 91       	pop	r28
 2a2:	1f 91       	pop	r17
 2a4:	0f 91       	pop	r16
 2a6:	08 95       	ret

000002a8 <key2>:
void key2()  
{   
 2a8:	0f 93       	push	r16
 2aa:	1f 93       	push	r17
 2ac:	cf 93       	push	r28
 2ae:	df 93       	push	r29
	uint8_t x=150 ;
	pressed=1 ;
 2b0:	81 e0       	ldi	r24, 0x01	; 1
 2b2:	80 93 a5 00 	sts	0x00A5, r24	; 0x8000a5 <pressed>
 2b6:	8b e7       	ldi	r24, 0x7B	; 123
 2b8:	92 e9       	ldi	r25, 0x92	; 146
 2ba:	01 97       	sbiw	r24, 0x01	; 1
 2bc:	f1 f7       	brne	.-4      	; 0x2ba <key2+0x12>
 2be:	00 c0       	rjmp	.+0      	; 0x2c0 <key2+0x18>
 2c0:	00 00       	nop
	while(pressed==1)
	{
		Send_A_Command(0x80+z) ;
		Send_A_String("e");
		
		if (PINA==pad[1])
 2c2:	c0 e6       	ldi	r28, 0x60	; 96
 2c4:	d0 e0       	ldi	r29, 0x00	; 0
			pressed=2;
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
 2c6:	05 e0       	ldi	r16, 0x05	; 5
		Send_A_Command(0x80+z) ;
		Send_A_String("e");
		
		if (PINA==pad[1])
		{
			pressed=2;
 2c8:	12 e0       	ldi	r17, 0x02	; 2
 2ca:	21 c0       	rjmp	.+66     	; 0x30e <key2+0x66>
	uint8_t x=150 ;
	pressed=1 ;
	_delay_ms(x);
	while(pressed==1)
	{
		Send_A_Command(0x80+z) ;
 2cc:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <__data_end>
 2d0:	80 58       	subi	r24, 0x80	; 128
 2d2:	0e 94 5e 00 	call	0xbc	; 0xbc <Send_A_Command>
		Send_A_String("e");
 2d6:	81 e7       	ldi	r24, 0x71	; 113
 2d8:	90 e0       	ldi	r25, 0x00	; 0
 2da:	0e 94 77 00 	call	0xee	; 0xee <Send_A_String>
		
		if (PINA==pad[1])
 2de:	99 b3       	in	r25, 0x19	; 25
 2e0:	89 81       	ldd	r24, Y+1	; 0x01
 2e2:	98 13       	cpse	r25, r24
 2e4:	09 c0       	rjmp	.+18     	; 0x2f8 <key2+0x50>
		{
			pressed=2;
 2e6:	10 93 a5 00 	sts	0x00A5, r17	; 0x8000a5 <pressed>
 2ea:	8b e7       	ldi	r24, 0x7B	; 123
 2ec:	92 e9       	ldi	r25, 0x92	; 146
 2ee:	01 97       	sbiw	r24, 0x01	; 1
 2f0:	f1 f7       	brne	.-4      	; 0x2ee <key2+0x46>
 2f2:	00 c0       	rjmp	.+0      	; 0x2f4 <key2+0x4c>
 2f4:	00 00       	nop
 2f6:	0b c0       	rjmp	.+22     	; 0x30e <key2+0x66>
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
 2f8:	99 b3       	in	r25, 0x19	; 25
 2fa:	88 85       	ldd	r24, Y+8	; 0x08
 2fc:	98 13       	cpse	r25, r24
 2fe:	07 c0       	rjmp	.+14     	; 0x30e <key2+0x66>
 300:	8c b5       	in	r24, 0x2c	; 44
 302:	9d b5       	in	r25, 0x2d	; 45
 304:	89 3e       	cpi	r24, 0xE9	; 233
 306:	9d 4f       	sbci	r25, 0xFD	; 253
 308:	10 f0       	brcs	.+4      	; 0x30e <key2+0x66>
		pressed=5;
 30a:	00 93 a5 00 	sts	0x00A5, r16	; 0x8000a5 <pressed>
void key2()  
{   
	uint8_t x=150 ;
	pressed=1 ;
	_delay_ms(x);
	while(pressed==1)
 30e:	80 91 a5 00 	lds	r24, 0x00A5	; 0x8000a5 <pressed>
 312:	81 30       	cpi	r24, 0x01	; 1
 314:	d9 f2       	breq	.-74     	; 0x2cc <key2+0x24>
	while (pressed==2)
	{
		Send_A_Command(0x80+z) ;
		Send_A_String("f");
		
		if(PINA==pad[1])
 316:	c0 e6       	ldi	r28, 0x60	; 96
 318:	d0 e0       	ldi	r29, 0x00	; 0
			pressed=3;
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
 31a:	05 e0       	ldi	r16, 0x05	; 5
		Send_A_Command(0x80+z) ;
		Send_A_String("f");
		
		if(PINA==pad[1])
		{
			pressed=3;
 31c:	13 e0       	ldi	r17, 0x03	; 3
 31e:	21 c0       	rjmp	.+66     	; 0x362 <key2+0xba>
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while (pressed==2)
	{
		Send_A_Command(0x80+z) ;
 320:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <__data_end>
 324:	80 58       	subi	r24, 0x80	; 128
 326:	0e 94 5e 00 	call	0xbc	; 0xbc <Send_A_Command>
		Send_A_String("f");
 32a:	83 e7       	ldi	r24, 0x73	; 115
 32c:	90 e0       	ldi	r25, 0x00	; 0
 32e:	0e 94 77 00 	call	0xee	; 0xee <Send_A_String>
		
		if(PINA==pad[1])
 332:	99 b3       	in	r25, 0x19	; 25
 334:	89 81       	ldd	r24, Y+1	; 0x01
 336:	98 13       	cpse	r25, r24
 338:	09 c0       	rjmp	.+18     	; 0x34c <key2+0xa4>
		{
			pressed=3;
 33a:	10 93 a5 00 	sts	0x00A5, r17	; 0x8000a5 <pressed>
 33e:	8b e7       	ldi	r24, 0x7B	; 123
 340:	92 e9       	ldi	r25, 0x92	; 146
 342:	01 97       	sbiw	r24, 0x01	; 1
 344:	f1 f7       	brne	.-4      	; 0x342 <key2+0x9a>
 346:	00 c0       	rjmp	.+0      	; 0x348 <key2+0xa0>
 348:	00 00       	nop
 34a:	0b c0       	rjmp	.+22     	; 0x362 <key2+0xba>
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
 34c:	99 b3       	in	r25, 0x19	; 25
 34e:	88 85       	ldd	r24, Y+8	; 0x08
 350:	98 13       	cpse	r25, r24
 352:	07 c0       	rjmp	.+14     	; 0x362 <key2+0xba>
 354:	8c b5       	in	r24, 0x2c	; 44
 356:	9d b5       	in	r25, 0x2d	; 45
 358:	89 3e       	cpi	r24, 0xE9	; 233
 35a:	9d 4f       	sbci	r25, 0xFD	; 253
 35c:	10 f0       	brcs	.+4      	; 0x362 <key2+0xba>
		pressed=5;
 35e:	00 93 a5 00 	sts	0x00A5, r16	; 0x8000a5 <pressed>
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while (pressed==2)
 362:	80 91 a5 00 	lds	r24, 0x00A5	; 0x8000a5 <pressed>
 366:	82 30       	cpi	r24, 0x02	; 2
 368:	d9 f2       	breq	.-74     	; 0x320 <key2+0x78>
	while(pressed==3)
	{
		Send_A_Command(0x80+z) ;
		Send_A_String("g");
		
		if(PINA==pad[1])
 36a:	c0 e6       	ldi	r28, 0x60	; 96
 36c:	d0 e0       	ldi	r29, 0x00	; 0
			pressed=4;
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
 36e:	05 e0       	ldi	r16, 0x05	; 5
		Send_A_Command(0x80+z) ;
		Send_A_String("g");
		
		if(PINA==pad[1])
		{
			pressed=4;
 370:	14 e0       	ldi	r17, 0x04	; 4
 372:	21 c0       	rjmp	.+66     	; 0x3b6 <key2+0x10e>
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while(pressed==3)
	{
		Send_A_Command(0x80+z) ;
 374:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <__data_end>
 378:	80 58       	subi	r24, 0x80	; 128
 37a:	0e 94 5e 00 	call	0xbc	; 0xbc <Send_A_Command>
		Send_A_String("g");
 37e:	85 e7       	ldi	r24, 0x75	; 117
 380:	90 e0       	ldi	r25, 0x00	; 0
 382:	0e 94 77 00 	call	0xee	; 0xee <Send_A_String>
		
		if(PINA==pad[1])
 386:	99 b3       	in	r25, 0x19	; 25
 388:	89 81       	ldd	r24, Y+1	; 0x01
 38a:	98 13       	cpse	r25, r24
 38c:	09 c0       	rjmp	.+18     	; 0x3a0 <key2+0xf8>
		{
			pressed=4;
 38e:	10 93 a5 00 	sts	0x00A5, r17	; 0x8000a5 <pressed>
 392:	8b e7       	ldi	r24, 0x7B	; 123
 394:	92 e9       	ldi	r25, 0x92	; 146
 396:	01 97       	sbiw	r24, 0x01	; 1
 398:	f1 f7       	brne	.-4      	; 0x396 <key2+0xee>
 39a:	00 c0       	rjmp	.+0      	; 0x39c <key2+0xf4>
 39c:	00 00       	nop
 39e:	0b c0       	rjmp	.+22     	; 0x3b6 <key2+0x10e>
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
 3a0:	99 b3       	in	r25, 0x19	; 25
 3a2:	88 85       	ldd	r24, Y+8	; 0x08
 3a4:	98 13       	cpse	r25, r24
 3a6:	07 c0       	rjmp	.+14     	; 0x3b6 <key2+0x10e>
 3a8:	8c b5       	in	r24, 0x2c	; 44
 3aa:	9d b5       	in	r25, 0x2d	; 45
 3ac:	89 3e       	cpi	r24, 0xE9	; 233
 3ae:	9d 4f       	sbci	r25, 0xFD	; 253
 3b0:	10 f0       	brcs	.+4      	; 0x3b6 <key2+0x10e>
		pressed=5;
 3b2:	00 93 a5 00 	sts	0x00A5, r16	; 0x8000a5 <pressed>
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while(pressed==3)
 3b6:	80 91 a5 00 	lds	r24, 0x00A5	; 0x8000a5 <pressed>
 3ba:	83 30       	cpi	r24, 0x03	; 3
 3bc:	d9 f2       	breq	.-74     	; 0x374 <key2+0xcc>
	while(pressed==4)
	{
		Send_A_Command(0x80+z) ;
		Send_A_String("h");
		
		if(PINA==pad[1])
 3be:	c0 e6       	ldi	r28, 0x60	; 96
 3c0:	d0 e0       	ldi	r29, 0x00	; 0
			pressed=1;
			_delay_ms(30);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
 3c2:	05 e0       	ldi	r16, 0x05	; 5
		Send_A_Command(0x80+z) ;
		Send_A_String("h");
		
		if(PINA==pad[1])
		{
			pressed=1;
 3c4:	11 e0       	ldi	r17, 0x01	; 1
 3c6:	21 c0       	rjmp	.+66     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while(pressed==4)
	{
		Send_A_Command(0x80+z) ;
 3c8:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <__data_end>
 3cc:	80 58       	subi	r24, 0x80	; 128
 3ce:	0e 94 5e 00 	call	0xbc	; 0xbc <Send_A_Command>
		Send_A_String("h");
 3d2:	87 e7       	ldi	r24, 0x77	; 119
 3d4:	90 e0       	ldi	r25, 0x00	; 0
 3d6:	0e 94 77 00 	call	0xee	; 0xee <Send_A_String>
		
		if(PINA==pad[1])
 3da:	99 b3       	in	r25, 0x19	; 25
 3dc:	89 81       	ldd	r24, Y+1	; 0x01
 3de:	98 13       	cpse	r25, r24
 3e0:	09 c0       	rjmp	.+18     	; 0x3f4 <key2+0x14c>
		{
			pressed=1;
 3e2:	10 93 a5 00 	sts	0x00A5, r17	; 0x8000a5 <pressed>
 3e6:	8b e4       	ldi	r24, 0x4B	; 75
 3e8:	9d e1       	ldi	r25, 0x1D	; 29
 3ea:	01 97       	sbiw	r24, 0x01	; 1
 3ec:	f1 f7       	brne	.-4      	; 0x3ea <key2+0x142>
 3ee:	00 c0       	rjmp	.+0      	; 0x3f0 <key2+0x148>
 3f0:	00 00       	nop
 3f2:	0b c0       	rjmp	.+22     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
			_delay_ms(30);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
 3f4:	99 b3       	in	r25, 0x19	; 25
 3f6:	88 85       	ldd	r24, Y+8	; 0x08
 3f8:	98 13       	cpse	r25, r24
 3fa:	07 c0       	rjmp	.+14     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3fc:	8c b5       	in	r24, 0x2c	; 44
 3fe:	9d b5       	in	r25, 0x2d	; 45
 400:	89 3e       	cpi	r24, 0xE9	; 233
 402:	9d 4f       	sbci	r25, 0xFD	; 253
 404:	10 f0       	brcs	.+4      	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
		pressed=5;
 406:	00 93 a5 00 	sts	0x00A5, r16	; 0x8000a5 <pressed>
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while(pressed==4)
 40a:	80 91 a5 00 	lds	r24, 0x00A5	; 0x8000a5 <pressed>
 40e:	84 30       	cpi	r24, 0x04	; 4
 410:	d9 f2       	breq	.-74     	; 0x3c8 <key2+0x120>
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while(pressed==5&&PINA==pad[8])
 412:	85 30       	cpi	r24, 0x05	; 5
 414:	91 f4       	brne	.+36     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 416:	99 b3       	in	r25, 0x19	; 25
 418:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <__data_start+0x8>
 41c:	98 13       	cpse	r25, r24
 41e:	0d c0       	rjmp	.+26     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
	{
		z++;
 420:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <__data_end>
 424:	91 e0       	ldi	r25, 0x01	; 1
 426:	98 0f       	add	r25, r24
 428:	90 93 a4 00 	sts	0x00A4, r25	; 0x8000a4 <__data_end>
		Send_A_Command(0x80+z)  ;
 42c:	8f 57       	subi	r24, 0x7F	; 127
 42e:	0e 94 5e 00 	call	0xbc	; 0xbc <Send_A_Command>
		TCNT1 = 0 ;
 432:	1d bc       	out	0x2d, r1	; 45
 434:	1c bc       	out	0x2c, r1	; 44
		pressed=0 ;
 436:	10 92 a5 00 	sts	0x00A5, r1	; 0x8000a5 <pressed>
	}

}
 43a:	df 91       	pop	r29
 43c:	cf 91       	pop	r28
 43e:	1f 91       	pop	r17
 440:	0f 91       	pop	r16
 442:	08 95       	ret

00000444 <key3>:
void key3() 
{
 444:	0f 93       	push	r16
 446:	1f 93       	push	r17
 448:	cf 93       	push	r28
 44a:	df 93       	push	r29
	uint8_t x=150 ;
	pressed=1 ;
 44c:	81 e0       	ldi	r24, 0x01	; 1
 44e:	80 93 a5 00 	sts	0x00A5, r24	; 0x8000a5 <pressed>
 452:	8b e7       	ldi	r24, 0x7B	; 123
 454:	92 e9       	ldi	r25, 0x92	; 146
 456:	01 97       	sbiw	r24, 0x01	; 1
 458:	f1 f7       	brne	.-4      	; 0x456 <key3+0x12>
 45a:	00 c0       	rjmp	.+0      	; 0x45c <key3+0x18>
 45c:	00 00       	nop
	while(pressed==1)
	{
		Send_A_Command(0x80+z) ;
		Send_A_String("i");
		
		if (PINA==pad[2])
 45e:	c0 e6       	ldi	r28, 0x60	; 96
 460:	d0 e0       	ldi	r29, 0x00	; 0
			pressed=2;
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
 462:	05 e0       	ldi	r16, 0x05	; 5
		Send_A_Command(0x80+z) ;
		Send_A_String("i");
		
		if (PINA==pad[2])
		{
			pressed=2;
 464:	12 e0       	ldi	r17, 0x02	; 2
 466:	21 c0       	rjmp	.+66     	; 0x4aa <__stack+0x4b>
	uint8_t x=150 ;
	pressed=1 ;
	_delay_ms(x);
	while(pressed==1)
	{
		Send_A_Command(0x80+z) ;
 468:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <__data_end>
 46c:	80 58       	subi	r24, 0x80	; 128
 46e:	0e 94 5e 00 	call	0xbc	; 0xbc <Send_A_Command>
		Send_A_String("i");
 472:	89 e7       	ldi	r24, 0x79	; 121
 474:	90 e0       	ldi	r25, 0x00	; 0
 476:	0e 94 77 00 	call	0xee	; 0xee <Send_A_String>
		
		if (PINA==pad[2])
 47a:	99 b3       	in	r25, 0x19	; 25
 47c:	8a 81       	ldd	r24, Y+2	; 0x02
 47e:	98 13       	cpse	r25, r24
 480:	09 c0       	rjmp	.+18     	; 0x494 <__stack+0x35>
		{
			pressed=2;
 482:	10 93 a5 00 	sts	0x00A5, r17	; 0x8000a5 <pressed>
 486:	8b e7       	ldi	r24, 0x7B	; 123
 488:	92 e9       	ldi	r25, 0x92	; 146
 48a:	01 97       	sbiw	r24, 0x01	; 1
 48c:	f1 f7       	brne	.-4      	; 0x48a <__stack+0x2b>
 48e:	00 c0       	rjmp	.+0      	; 0x490 <__stack+0x31>
 490:	00 00       	nop
 492:	0b c0       	rjmp	.+22     	; 0x4aa <__stack+0x4b>
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
 494:	99 b3       	in	r25, 0x19	; 25
 496:	88 85       	ldd	r24, Y+8	; 0x08
 498:	98 13       	cpse	r25, r24
 49a:	07 c0       	rjmp	.+14     	; 0x4aa <__stack+0x4b>
 49c:	8c b5       	in	r24, 0x2c	; 44
 49e:	9d b5       	in	r25, 0x2d	; 45
 4a0:	89 3e       	cpi	r24, 0xE9	; 233
 4a2:	9d 4f       	sbci	r25, 0xFD	; 253
 4a4:	10 f0       	brcs	.+4      	; 0x4aa <__stack+0x4b>
		pressed=5;
 4a6:	00 93 a5 00 	sts	0x00A5, r16	; 0x8000a5 <pressed>
void key3() 
{
	uint8_t x=150 ;
	pressed=1 ;
	_delay_ms(x);
	while(pressed==1)
 4aa:	80 91 a5 00 	lds	r24, 0x00A5	; 0x8000a5 <pressed>
 4ae:	81 30       	cpi	r24, 0x01	; 1
 4b0:	d9 f2       	breq	.-74     	; 0x468 <__stack+0x9>
	while (pressed==2)
	{
		Send_A_Command(0x80+z) ;
		Send_A_String("j");
		
		if(PINA==pad[2])
 4b2:	c0 e6       	ldi	r28, 0x60	; 96
 4b4:	d0 e0       	ldi	r29, 0x00	; 0
			pressed=3;
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
 4b6:	05 e0       	ldi	r16, 0x05	; 5
		Send_A_Command(0x80+z) ;
		Send_A_String("j");
		
		if(PINA==pad[2])
		{
			pressed=3;
 4b8:	13 e0       	ldi	r17, 0x03	; 3
 4ba:	21 c0       	rjmp	.+66     	; 0x4fe <__stack+0x9f>
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while (pressed==2)
	{
		Send_A_Command(0x80+z) ;
 4bc:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <__data_end>
 4c0:	80 58       	subi	r24, 0x80	; 128
 4c2:	0e 94 5e 00 	call	0xbc	; 0xbc <Send_A_Command>
		Send_A_String("j");
 4c6:	8b e7       	ldi	r24, 0x7B	; 123
 4c8:	90 e0       	ldi	r25, 0x00	; 0
 4ca:	0e 94 77 00 	call	0xee	; 0xee <Send_A_String>
		
		if(PINA==pad[2])
 4ce:	99 b3       	in	r25, 0x19	; 25
 4d0:	8a 81       	ldd	r24, Y+2	; 0x02
 4d2:	98 13       	cpse	r25, r24
 4d4:	09 c0       	rjmp	.+18     	; 0x4e8 <__stack+0x89>
		{
			pressed=3;
 4d6:	10 93 a5 00 	sts	0x00A5, r17	; 0x8000a5 <pressed>
 4da:	8b e7       	ldi	r24, 0x7B	; 123
 4dc:	92 e9       	ldi	r25, 0x92	; 146
 4de:	01 97       	sbiw	r24, 0x01	; 1
 4e0:	f1 f7       	brne	.-4      	; 0x4de <__stack+0x7f>
 4e2:	00 c0       	rjmp	.+0      	; 0x4e4 <__stack+0x85>
 4e4:	00 00       	nop
 4e6:	0b c0       	rjmp	.+22     	; 0x4fe <__stack+0x9f>
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
 4e8:	99 b3       	in	r25, 0x19	; 25
 4ea:	88 85       	ldd	r24, Y+8	; 0x08
 4ec:	98 13       	cpse	r25, r24
 4ee:	07 c0       	rjmp	.+14     	; 0x4fe <__stack+0x9f>
 4f0:	8c b5       	in	r24, 0x2c	; 44
 4f2:	9d b5       	in	r25, 0x2d	; 45
 4f4:	89 3e       	cpi	r24, 0xE9	; 233
 4f6:	9d 4f       	sbci	r25, 0xFD	; 253
 4f8:	10 f0       	brcs	.+4      	; 0x4fe <__stack+0x9f>
		pressed=5;
 4fa:	00 93 a5 00 	sts	0x00A5, r16	; 0x8000a5 <pressed>
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while (pressed==2)
 4fe:	80 91 a5 00 	lds	r24, 0x00A5	; 0x8000a5 <pressed>
 502:	82 30       	cpi	r24, 0x02	; 2
 504:	d9 f2       	breq	.-74     	; 0x4bc <__stack+0x5d>
	while(pressed==3)
	{
		Send_A_Command(0x80+z) ;
		Send_A_String("k");
		
		if(PINA==pad[2])
 506:	c0 e6       	ldi	r28, 0x60	; 96
 508:	d0 e0       	ldi	r29, 0x00	; 0
			pressed=4;
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
 50a:	05 e0       	ldi	r16, 0x05	; 5
		Send_A_Command(0x80+z) ;
		Send_A_String("k");
		
		if(PINA==pad[2])
		{
			pressed=4;
 50c:	14 e0       	ldi	r17, 0x04	; 4
 50e:	21 c0       	rjmp	.+66     	; 0x552 <__stack+0xf3>
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while(pressed==3)
	{
		Send_A_Command(0x80+z) ;
 510:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <__data_end>
 514:	80 58       	subi	r24, 0x80	; 128
 516:	0e 94 5e 00 	call	0xbc	; 0xbc <Send_A_Command>
		Send_A_String("k");
 51a:	8d e7       	ldi	r24, 0x7D	; 125
 51c:	90 e0       	ldi	r25, 0x00	; 0
 51e:	0e 94 77 00 	call	0xee	; 0xee <Send_A_String>
		
		if(PINA==pad[2])
 522:	99 b3       	in	r25, 0x19	; 25
 524:	8a 81       	ldd	r24, Y+2	; 0x02
 526:	98 13       	cpse	r25, r24
 528:	09 c0       	rjmp	.+18     	; 0x53c <__stack+0xdd>
		{
			pressed=4;
 52a:	10 93 a5 00 	sts	0x00A5, r17	; 0x8000a5 <pressed>
 52e:	8b e7       	ldi	r24, 0x7B	; 123
 530:	92 e9       	ldi	r25, 0x92	; 146
 532:	01 97       	sbiw	r24, 0x01	; 1
 534:	f1 f7       	brne	.-4      	; 0x532 <__stack+0xd3>
 536:	00 c0       	rjmp	.+0      	; 0x538 <__stack+0xd9>
 538:	00 00       	nop
 53a:	0b c0       	rjmp	.+22     	; 0x552 <__stack+0xf3>
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
 53c:	99 b3       	in	r25, 0x19	; 25
 53e:	88 85       	ldd	r24, Y+8	; 0x08
 540:	98 13       	cpse	r25, r24
 542:	07 c0       	rjmp	.+14     	; 0x552 <__stack+0xf3>
 544:	8c b5       	in	r24, 0x2c	; 44
 546:	9d b5       	in	r25, 0x2d	; 45
 548:	89 3e       	cpi	r24, 0xE9	; 233
 54a:	9d 4f       	sbci	r25, 0xFD	; 253
 54c:	10 f0       	brcs	.+4      	; 0x552 <__stack+0xf3>
		pressed=5;
 54e:	00 93 a5 00 	sts	0x00A5, r16	; 0x8000a5 <pressed>
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while(pressed==3)
 552:	80 91 a5 00 	lds	r24, 0x00A5	; 0x8000a5 <pressed>
 556:	83 30       	cpi	r24, 0x03	; 3
 558:	d9 f2       	breq	.-74     	; 0x510 <__stack+0xb1>
	while(pressed==4)
	{
		Send_A_Command(0x80+z) ;
		Send_A_String("l");
		
		if(PINA==pad[2])
 55a:	c0 e6       	ldi	r28, 0x60	; 96
 55c:	d0 e0       	ldi	r29, 0x00	; 0
			pressed=1;
			_delay_ms(30);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
 55e:	05 e0       	ldi	r16, 0x05	; 5
		Send_A_Command(0x80+z) ;
		Send_A_String("l");
		
		if(PINA==pad[2])
		{
			pressed=1;
 560:	11 e0       	ldi	r17, 0x01	; 1
 562:	21 c0       	rjmp	.+66     	; 0x5a6 <__stack+0x147>
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while(pressed==4)
	{
		Send_A_Command(0x80+z) ;
 564:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <__data_end>
 568:	80 58       	subi	r24, 0x80	; 128
 56a:	0e 94 5e 00 	call	0xbc	; 0xbc <Send_A_Command>
		Send_A_String("l");
 56e:	8f e7       	ldi	r24, 0x7F	; 127
 570:	90 e0       	ldi	r25, 0x00	; 0
 572:	0e 94 77 00 	call	0xee	; 0xee <Send_A_String>
		
		if(PINA==pad[2])
 576:	99 b3       	in	r25, 0x19	; 25
 578:	8a 81       	ldd	r24, Y+2	; 0x02
 57a:	98 13       	cpse	r25, r24
 57c:	09 c0       	rjmp	.+18     	; 0x590 <__stack+0x131>
		{
			pressed=1;
 57e:	10 93 a5 00 	sts	0x00A5, r17	; 0x8000a5 <pressed>
 582:	8b e4       	ldi	r24, 0x4B	; 75
 584:	9d e1       	ldi	r25, 0x1D	; 29
 586:	01 97       	sbiw	r24, 0x01	; 1
 588:	f1 f7       	brne	.-4      	; 0x586 <__stack+0x127>
 58a:	00 c0       	rjmp	.+0      	; 0x58c <__stack+0x12d>
 58c:	00 00       	nop
 58e:	0b c0       	rjmp	.+22     	; 0x5a6 <__stack+0x147>
			_delay_ms(30);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
 590:	99 b3       	in	r25, 0x19	; 25
 592:	88 85       	ldd	r24, Y+8	; 0x08
 594:	98 13       	cpse	r25, r24
 596:	07 c0       	rjmp	.+14     	; 0x5a6 <__stack+0x147>
 598:	8c b5       	in	r24, 0x2c	; 44
 59a:	9d b5       	in	r25, 0x2d	; 45
 59c:	89 3e       	cpi	r24, 0xE9	; 233
 59e:	9d 4f       	sbci	r25, 0xFD	; 253
 5a0:	10 f0       	brcs	.+4      	; 0x5a6 <__stack+0x147>
		pressed=5;
 5a2:	00 93 a5 00 	sts	0x00A5, r16	; 0x8000a5 <pressed>
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while(pressed==4)
 5a6:	80 91 a5 00 	lds	r24, 0x00A5	; 0x8000a5 <pressed>
 5aa:	84 30       	cpi	r24, 0x04	; 4
 5ac:	d9 f2       	breq	.-74     	; 0x564 <__stack+0x105>
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while(pressed==5&&PINA==pad[8])
 5ae:	85 30       	cpi	r24, 0x05	; 5
 5b0:	91 f4       	brne	.+36     	; 0x5d6 <__stack+0x177>
 5b2:	99 b3       	in	r25, 0x19	; 25
 5b4:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <__data_start+0x8>
 5b8:	98 13       	cpse	r25, r24
 5ba:	0d c0       	rjmp	.+26     	; 0x5d6 <__stack+0x177>
	{
		z++;
 5bc:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <__data_end>
 5c0:	91 e0       	ldi	r25, 0x01	; 1
 5c2:	98 0f       	add	r25, r24
 5c4:	90 93 a4 00 	sts	0x00A4, r25	; 0x8000a4 <__data_end>
		Send_A_Command(0x80+z)  ;
 5c8:	8f 57       	subi	r24, 0x7F	; 127
 5ca:	0e 94 5e 00 	call	0xbc	; 0xbc <Send_A_Command>
		TCNT1 = 0 ;
 5ce:	1d bc       	out	0x2d, r1	; 45
 5d0:	1c bc       	out	0x2c, r1	; 44
		pressed=0 ;
 5d2:	10 92 a5 00 	sts	0x00A5, r1	; 0x8000a5 <pressed>
	}

}
 5d6:	df 91       	pop	r29
 5d8:	cf 91       	pop	r28
 5da:	1f 91       	pop	r17
 5dc:	0f 91       	pop	r16
 5de:	08 95       	ret

000005e0 <key4>:
void key4() {
 5e0:	0f 93       	push	r16
 5e2:	1f 93       	push	r17
 5e4:	cf 93       	push	r28
 5e6:	df 93       	push	r29
uint8_t x=150 ;
	pressed=1 ;
 5e8:	81 e0       	ldi	r24, 0x01	; 1
 5ea:	80 93 a5 00 	sts	0x00A5, r24	; 0x8000a5 <pressed>
 5ee:	8b e7       	ldi	r24, 0x7B	; 123
 5f0:	92 e9       	ldi	r25, 0x92	; 146
 5f2:	01 97       	sbiw	r24, 0x01	; 1
 5f4:	f1 f7       	brne	.-4      	; 0x5f2 <key4+0x12>
 5f6:	00 c0       	rjmp	.+0      	; 0x5f8 <key4+0x18>
 5f8:	00 00       	nop
	while(pressed==1)
	{
		Send_A_Command(0x80+z) ;
		Send_A_String("m");
		
		if (PINA==pad[3])
 5fa:	c0 e6       	ldi	r28, 0x60	; 96
 5fc:	d0 e0       	ldi	r29, 0x00	; 0
			pressed=2;
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
 5fe:	05 e0       	ldi	r16, 0x05	; 5
		Send_A_Command(0x80+z) ;
		Send_A_String("m");
		
		if (PINA==pad[3])
		{
			pressed=2;
 600:	12 e0       	ldi	r17, 0x02	; 2
 602:	21 c0       	rjmp	.+66     	; 0x646 <key4+0x66>
uint8_t x=150 ;
	pressed=1 ;
	_delay_ms(x);
	while(pressed==1)
	{
		Send_A_Command(0x80+z) ;
 604:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <__data_end>
 608:	80 58       	subi	r24, 0x80	; 128
 60a:	0e 94 5e 00 	call	0xbc	; 0xbc <Send_A_Command>
		Send_A_String("m");
 60e:	81 e8       	ldi	r24, 0x81	; 129
 610:	90 e0       	ldi	r25, 0x00	; 0
 612:	0e 94 77 00 	call	0xee	; 0xee <Send_A_String>
		
		if (PINA==pad[3])
 616:	99 b3       	in	r25, 0x19	; 25
 618:	8b 81       	ldd	r24, Y+3	; 0x03
 61a:	98 13       	cpse	r25, r24
 61c:	09 c0       	rjmp	.+18     	; 0x630 <key4+0x50>
		{
			pressed=2;
 61e:	10 93 a5 00 	sts	0x00A5, r17	; 0x8000a5 <pressed>
 622:	8b e7       	ldi	r24, 0x7B	; 123
 624:	92 e9       	ldi	r25, 0x92	; 146
 626:	01 97       	sbiw	r24, 0x01	; 1
 628:	f1 f7       	brne	.-4      	; 0x626 <key4+0x46>
 62a:	00 c0       	rjmp	.+0      	; 0x62c <key4+0x4c>
 62c:	00 00       	nop
 62e:	0b c0       	rjmp	.+22     	; 0x646 <key4+0x66>
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
 630:	99 b3       	in	r25, 0x19	; 25
 632:	88 85       	ldd	r24, Y+8	; 0x08
 634:	98 13       	cpse	r25, r24
 636:	07 c0       	rjmp	.+14     	; 0x646 <key4+0x66>
 638:	8c b5       	in	r24, 0x2c	; 44
 63a:	9d b5       	in	r25, 0x2d	; 45
 63c:	89 3e       	cpi	r24, 0xE9	; 233
 63e:	9d 4f       	sbci	r25, 0xFD	; 253
 640:	10 f0       	brcs	.+4      	; 0x646 <key4+0x66>
		pressed=5;
 642:	00 93 a5 00 	sts	0x00A5, r16	; 0x8000a5 <pressed>
}
void key4() {
uint8_t x=150 ;
	pressed=1 ;
	_delay_ms(x);
	while(pressed==1)
 646:	80 91 a5 00 	lds	r24, 0x00A5	; 0x8000a5 <pressed>
 64a:	81 30       	cpi	r24, 0x01	; 1
 64c:	d9 f2       	breq	.-74     	; 0x604 <key4+0x24>
	while (pressed==2)
	{
		Send_A_Command(0x80+z) ;
		Send_A_String("n");
		
		if(PINA==pad[3])
 64e:	c0 e6       	ldi	r28, 0x60	; 96
 650:	d0 e0       	ldi	r29, 0x00	; 0
			pressed=3;
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
 652:	05 e0       	ldi	r16, 0x05	; 5
		Send_A_Command(0x80+z) ;
		Send_A_String("n");
		
		if(PINA==pad[3])
		{
			pressed=3;
 654:	13 e0       	ldi	r17, 0x03	; 3
 656:	21 c0       	rjmp	.+66     	; 0x69a <key4+0xba>
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while (pressed==2)
	{
		Send_A_Command(0x80+z) ;
 658:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <__data_end>
 65c:	80 58       	subi	r24, 0x80	; 128
 65e:	0e 94 5e 00 	call	0xbc	; 0xbc <Send_A_Command>
		Send_A_String("n");
 662:	83 e8       	ldi	r24, 0x83	; 131
 664:	90 e0       	ldi	r25, 0x00	; 0
 666:	0e 94 77 00 	call	0xee	; 0xee <Send_A_String>
		
		if(PINA==pad[3])
 66a:	99 b3       	in	r25, 0x19	; 25
 66c:	8b 81       	ldd	r24, Y+3	; 0x03
 66e:	98 13       	cpse	r25, r24
 670:	09 c0       	rjmp	.+18     	; 0x684 <key4+0xa4>
		{
			pressed=3;
 672:	10 93 a5 00 	sts	0x00A5, r17	; 0x8000a5 <pressed>
 676:	8b e7       	ldi	r24, 0x7B	; 123
 678:	92 e9       	ldi	r25, 0x92	; 146
 67a:	01 97       	sbiw	r24, 0x01	; 1
 67c:	f1 f7       	brne	.-4      	; 0x67a <key4+0x9a>
 67e:	00 c0       	rjmp	.+0      	; 0x680 <key4+0xa0>
 680:	00 00       	nop
 682:	0b c0       	rjmp	.+22     	; 0x69a <key4+0xba>
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
 684:	99 b3       	in	r25, 0x19	; 25
 686:	88 85       	ldd	r24, Y+8	; 0x08
 688:	98 13       	cpse	r25, r24
 68a:	07 c0       	rjmp	.+14     	; 0x69a <key4+0xba>
 68c:	8c b5       	in	r24, 0x2c	; 44
 68e:	9d b5       	in	r25, 0x2d	; 45
 690:	89 3e       	cpi	r24, 0xE9	; 233
 692:	9d 4f       	sbci	r25, 0xFD	; 253
 694:	10 f0       	brcs	.+4      	; 0x69a <key4+0xba>
		pressed=5;
 696:	00 93 a5 00 	sts	0x00A5, r16	; 0x8000a5 <pressed>
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while (pressed==2)
 69a:	80 91 a5 00 	lds	r24, 0x00A5	; 0x8000a5 <pressed>
 69e:	82 30       	cpi	r24, 0x02	; 2
 6a0:	d9 f2       	breq	.-74     	; 0x658 <key4+0x78>
	while(pressed==3)
	{
		Send_A_Command(0x80+z) ;
		Send_A_String("o");
		
		if(PINA==pad[3])
 6a2:	c0 e6       	ldi	r28, 0x60	; 96
 6a4:	d0 e0       	ldi	r29, 0x00	; 0
			pressed=4;
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
 6a6:	05 e0       	ldi	r16, 0x05	; 5
		Send_A_Command(0x80+z) ;
		Send_A_String("o");
		
		if(PINA==pad[3])
		{
			pressed=4;
 6a8:	14 e0       	ldi	r17, 0x04	; 4
 6aa:	21 c0       	rjmp	.+66     	; 0x6ee <key4+0x10e>
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while(pressed==3)
	{
		Send_A_Command(0x80+z) ;
 6ac:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <__data_end>
 6b0:	80 58       	subi	r24, 0x80	; 128
 6b2:	0e 94 5e 00 	call	0xbc	; 0xbc <Send_A_Command>
		Send_A_String("o");
 6b6:	85 e8       	ldi	r24, 0x85	; 133
 6b8:	90 e0       	ldi	r25, 0x00	; 0
 6ba:	0e 94 77 00 	call	0xee	; 0xee <Send_A_String>
		
		if(PINA==pad[3])
 6be:	99 b3       	in	r25, 0x19	; 25
 6c0:	8b 81       	ldd	r24, Y+3	; 0x03
 6c2:	98 13       	cpse	r25, r24
 6c4:	09 c0       	rjmp	.+18     	; 0x6d8 <key4+0xf8>
		{
			pressed=4;
 6c6:	10 93 a5 00 	sts	0x00A5, r17	; 0x8000a5 <pressed>
 6ca:	8b e7       	ldi	r24, 0x7B	; 123
 6cc:	92 e9       	ldi	r25, 0x92	; 146
 6ce:	01 97       	sbiw	r24, 0x01	; 1
 6d0:	f1 f7       	brne	.-4      	; 0x6ce <key4+0xee>
 6d2:	00 c0       	rjmp	.+0      	; 0x6d4 <key4+0xf4>
 6d4:	00 00       	nop
 6d6:	0b c0       	rjmp	.+22     	; 0x6ee <key4+0x10e>
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
 6d8:	99 b3       	in	r25, 0x19	; 25
 6da:	88 85       	ldd	r24, Y+8	; 0x08
 6dc:	98 13       	cpse	r25, r24
 6de:	07 c0       	rjmp	.+14     	; 0x6ee <key4+0x10e>
 6e0:	8c b5       	in	r24, 0x2c	; 44
 6e2:	9d b5       	in	r25, 0x2d	; 45
 6e4:	89 3e       	cpi	r24, 0xE9	; 233
 6e6:	9d 4f       	sbci	r25, 0xFD	; 253
 6e8:	10 f0       	brcs	.+4      	; 0x6ee <key4+0x10e>
		pressed=5;
 6ea:	00 93 a5 00 	sts	0x00A5, r16	; 0x8000a5 <pressed>
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while(pressed==3)
 6ee:	80 91 a5 00 	lds	r24, 0x00A5	; 0x8000a5 <pressed>
 6f2:	83 30       	cpi	r24, 0x03	; 3
 6f4:	d9 f2       	breq	.-74     	; 0x6ac <key4+0xcc>
	while(pressed==4)
	{
		Send_A_Command(0x80+z) ;
		Send_A_String("p");
		
		if(PINA==pad[3])
 6f6:	c0 e6       	ldi	r28, 0x60	; 96
 6f8:	d0 e0       	ldi	r29, 0x00	; 0
			pressed=1;
			_delay_ms(30);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
 6fa:	05 e0       	ldi	r16, 0x05	; 5
		Send_A_Command(0x80+z) ;
		Send_A_String("p");
		
		if(PINA==pad[3])
		{
			pressed=1;
 6fc:	11 e0       	ldi	r17, 0x01	; 1
 6fe:	21 c0       	rjmp	.+66     	; 0x742 <key4+0x162>
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while(pressed==4)
	{
		Send_A_Command(0x80+z) ;
 700:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <__data_end>
 704:	80 58       	subi	r24, 0x80	; 128
 706:	0e 94 5e 00 	call	0xbc	; 0xbc <Send_A_Command>
		Send_A_String("p");
 70a:	87 e8       	ldi	r24, 0x87	; 135
 70c:	90 e0       	ldi	r25, 0x00	; 0
 70e:	0e 94 77 00 	call	0xee	; 0xee <Send_A_String>
		
		if(PINA==pad[3])
 712:	99 b3       	in	r25, 0x19	; 25
 714:	8b 81       	ldd	r24, Y+3	; 0x03
 716:	98 13       	cpse	r25, r24
 718:	09 c0       	rjmp	.+18     	; 0x72c <key4+0x14c>
		{
			pressed=1;
 71a:	10 93 a5 00 	sts	0x00A5, r17	; 0x8000a5 <pressed>
 71e:	8b e4       	ldi	r24, 0x4B	; 75
 720:	9d e1       	ldi	r25, 0x1D	; 29
 722:	01 97       	sbiw	r24, 0x01	; 1
 724:	f1 f7       	brne	.-4      	; 0x722 <key4+0x142>
 726:	00 c0       	rjmp	.+0      	; 0x728 <key4+0x148>
 728:	00 00       	nop
 72a:	0b c0       	rjmp	.+22     	; 0x742 <key4+0x162>
			_delay_ms(30);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
 72c:	99 b3       	in	r25, 0x19	; 25
 72e:	88 85       	ldd	r24, Y+8	; 0x08
 730:	98 13       	cpse	r25, r24
 732:	07 c0       	rjmp	.+14     	; 0x742 <key4+0x162>
 734:	8c b5       	in	r24, 0x2c	; 44
 736:	9d b5       	in	r25, 0x2d	; 45
 738:	89 3e       	cpi	r24, 0xE9	; 233
 73a:	9d 4f       	sbci	r25, 0xFD	; 253
 73c:	10 f0       	brcs	.+4      	; 0x742 <key4+0x162>
		pressed=5;
 73e:	00 93 a5 00 	sts	0x00A5, r16	; 0x8000a5 <pressed>
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while(pressed==4)
 742:	80 91 a5 00 	lds	r24, 0x00A5	; 0x8000a5 <pressed>
 746:	84 30       	cpi	r24, 0x04	; 4
 748:	d9 f2       	breq	.-74     	; 0x700 <key4+0x120>
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while(pressed==5&&PINA==pad[8])
 74a:	85 30       	cpi	r24, 0x05	; 5
 74c:	91 f4       	brne	.+36     	; 0x772 <key4+0x192>
 74e:	99 b3       	in	r25, 0x19	; 25
 750:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <__data_start+0x8>
 754:	98 13       	cpse	r25, r24
 756:	0d c0       	rjmp	.+26     	; 0x772 <key4+0x192>
	{
		z++;
 758:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <__data_end>
 75c:	91 e0       	ldi	r25, 0x01	; 1
 75e:	98 0f       	add	r25, r24
 760:	90 93 a4 00 	sts	0x00A4, r25	; 0x8000a4 <__data_end>
		Send_A_Command(0x80+z)  ;
 764:	8f 57       	subi	r24, 0x7F	; 127
 766:	0e 94 5e 00 	call	0xbc	; 0xbc <Send_A_Command>
		TCNT1 = 0 ;
 76a:	1d bc       	out	0x2d, r1	; 45
 76c:	1c bc       	out	0x2c, r1	; 44
		pressed=0 ;
 76e:	10 92 a5 00 	sts	0x00A5, r1	; 0x8000a5 <pressed>
	}}
 772:	df 91       	pop	r29
 774:	cf 91       	pop	r28
 776:	1f 91       	pop	r17
 778:	0f 91       	pop	r16
 77a:	08 95       	ret

0000077c <key5>:
void key5() {uint8_t x=150 ;
 77c:	0f 93       	push	r16
 77e:	1f 93       	push	r17
 780:	cf 93       	push	r28
 782:	df 93       	push	r29
	pressed=1 ;
 784:	81 e0       	ldi	r24, 0x01	; 1
 786:	80 93 a5 00 	sts	0x00A5, r24	; 0x8000a5 <pressed>
 78a:	8b e7       	ldi	r24, 0x7B	; 123
 78c:	92 e9       	ldi	r25, 0x92	; 146
 78e:	01 97       	sbiw	r24, 0x01	; 1
 790:	f1 f7       	brne	.-4      	; 0x78e <key5+0x12>
 792:	00 c0       	rjmp	.+0      	; 0x794 <key5+0x18>
 794:	00 00       	nop
	while(pressed==1)
	{
		Send_A_Command(0x80+z) ;
		Send_A_String("q");
		
		if (PINA==pad[4])
 796:	c0 e6       	ldi	r28, 0x60	; 96
 798:	d0 e0       	ldi	r29, 0x00	; 0
			pressed=2;
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
 79a:	05 e0       	ldi	r16, 0x05	; 5
		Send_A_Command(0x80+z) ;
		Send_A_String("q");
		
		if (PINA==pad[4])
		{
			pressed=2;
 79c:	12 e0       	ldi	r17, 0x02	; 2
 79e:	21 c0       	rjmp	.+66     	; 0x7e2 <key5+0x66>
void key5() {uint8_t x=150 ;
	pressed=1 ;
	_delay_ms(x);
	while(pressed==1)
	{
		Send_A_Command(0x80+z) ;
 7a0:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <__data_end>
 7a4:	80 58       	subi	r24, 0x80	; 128
 7a6:	0e 94 5e 00 	call	0xbc	; 0xbc <Send_A_Command>
		Send_A_String("q");
 7aa:	89 e8       	ldi	r24, 0x89	; 137
 7ac:	90 e0       	ldi	r25, 0x00	; 0
 7ae:	0e 94 77 00 	call	0xee	; 0xee <Send_A_String>
		
		if (PINA==pad[4])
 7b2:	99 b3       	in	r25, 0x19	; 25
 7b4:	8c 81       	ldd	r24, Y+4	; 0x04
 7b6:	98 13       	cpse	r25, r24
 7b8:	09 c0       	rjmp	.+18     	; 0x7cc <key5+0x50>
		{
			pressed=2;
 7ba:	10 93 a5 00 	sts	0x00A5, r17	; 0x8000a5 <pressed>
 7be:	8b e7       	ldi	r24, 0x7B	; 123
 7c0:	92 e9       	ldi	r25, 0x92	; 146
 7c2:	01 97       	sbiw	r24, 0x01	; 1
 7c4:	f1 f7       	brne	.-4      	; 0x7c2 <key5+0x46>
 7c6:	00 c0       	rjmp	.+0      	; 0x7c8 <key5+0x4c>
 7c8:	00 00       	nop
 7ca:	0b c0       	rjmp	.+22     	; 0x7e2 <key5+0x66>
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
 7cc:	99 b3       	in	r25, 0x19	; 25
 7ce:	88 85       	ldd	r24, Y+8	; 0x08
 7d0:	98 13       	cpse	r25, r24
 7d2:	07 c0       	rjmp	.+14     	; 0x7e2 <key5+0x66>
 7d4:	8c b5       	in	r24, 0x2c	; 44
 7d6:	9d b5       	in	r25, 0x2d	; 45
 7d8:	89 3e       	cpi	r24, 0xE9	; 233
 7da:	9d 4f       	sbci	r25, 0xFD	; 253
 7dc:	10 f0       	brcs	.+4      	; 0x7e2 <key5+0x66>
		pressed=5;
 7de:	00 93 a5 00 	sts	0x00A5, r16	; 0x8000a5 <pressed>
		pressed=0 ;
	}}
void key5() {uint8_t x=150 ;
	pressed=1 ;
	_delay_ms(x);
	while(pressed==1)
 7e2:	80 91 a5 00 	lds	r24, 0x00A5	; 0x8000a5 <pressed>
 7e6:	81 30       	cpi	r24, 0x01	; 1
 7e8:	d9 f2       	breq	.-74     	; 0x7a0 <key5+0x24>
	while (pressed==2)
	{
		Send_A_Command(0x80+z) ;
		Send_A_String("r");
		
		if(PINA==pad[4])
 7ea:	c0 e6       	ldi	r28, 0x60	; 96
 7ec:	d0 e0       	ldi	r29, 0x00	; 0
			pressed=3;
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
 7ee:	05 e0       	ldi	r16, 0x05	; 5
		Send_A_Command(0x80+z) ;
		Send_A_String("r");
		
		if(PINA==pad[4])
		{
			pressed=3;
 7f0:	13 e0       	ldi	r17, 0x03	; 3
 7f2:	21 c0       	rjmp	.+66     	; 0x836 <key5+0xba>
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while (pressed==2)
	{
		Send_A_Command(0x80+z) ;
 7f4:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <__data_end>
 7f8:	80 58       	subi	r24, 0x80	; 128
 7fa:	0e 94 5e 00 	call	0xbc	; 0xbc <Send_A_Command>
		Send_A_String("r");
 7fe:	8b e8       	ldi	r24, 0x8B	; 139
 800:	90 e0       	ldi	r25, 0x00	; 0
 802:	0e 94 77 00 	call	0xee	; 0xee <Send_A_String>
		
		if(PINA==pad[4])
 806:	99 b3       	in	r25, 0x19	; 25
 808:	8c 81       	ldd	r24, Y+4	; 0x04
 80a:	98 13       	cpse	r25, r24
 80c:	09 c0       	rjmp	.+18     	; 0x820 <key5+0xa4>
		{
			pressed=3;
 80e:	10 93 a5 00 	sts	0x00A5, r17	; 0x8000a5 <pressed>
 812:	8b e7       	ldi	r24, 0x7B	; 123
 814:	92 e9       	ldi	r25, 0x92	; 146
 816:	01 97       	sbiw	r24, 0x01	; 1
 818:	f1 f7       	brne	.-4      	; 0x816 <key5+0x9a>
 81a:	00 c0       	rjmp	.+0      	; 0x81c <key5+0xa0>
 81c:	00 00       	nop
 81e:	0b c0       	rjmp	.+22     	; 0x836 <key5+0xba>
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
 820:	99 b3       	in	r25, 0x19	; 25
 822:	88 85       	ldd	r24, Y+8	; 0x08
 824:	98 13       	cpse	r25, r24
 826:	07 c0       	rjmp	.+14     	; 0x836 <key5+0xba>
 828:	8c b5       	in	r24, 0x2c	; 44
 82a:	9d b5       	in	r25, 0x2d	; 45
 82c:	89 3e       	cpi	r24, 0xE9	; 233
 82e:	9d 4f       	sbci	r25, 0xFD	; 253
 830:	10 f0       	brcs	.+4      	; 0x836 <key5+0xba>
		pressed=5;
 832:	00 93 a5 00 	sts	0x00A5, r16	; 0x8000a5 <pressed>
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while (pressed==2)
 836:	80 91 a5 00 	lds	r24, 0x00A5	; 0x8000a5 <pressed>
 83a:	82 30       	cpi	r24, 0x02	; 2
 83c:	d9 f2       	breq	.-74     	; 0x7f4 <key5+0x78>
	while(pressed==3)
	{
		Send_A_Command(0x80+z) ;
		Send_A_String("s");
		
		if(PINA==pad[4])
 83e:	c0 e6       	ldi	r28, 0x60	; 96
 840:	d0 e0       	ldi	r29, 0x00	; 0
			pressed=4;
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
 842:	05 e0       	ldi	r16, 0x05	; 5
		Send_A_Command(0x80+z) ;
		Send_A_String("s");
		
		if(PINA==pad[4])
		{
			pressed=4;
 844:	14 e0       	ldi	r17, 0x04	; 4
 846:	21 c0       	rjmp	.+66     	; 0x88a <key5+0x10e>
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while(pressed==3)
	{
		Send_A_Command(0x80+z) ;
 848:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <__data_end>
 84c:	80 58       	subi	r24, 0x80	; 128
 84e:	0e 94 5e 00 	call	0xbc	; 0xbc <Send_A_Command>
		Send_A_String("s");
 852:	8d e8       	ldi	r24, 0x8D	; 141
 854:	90 e0       	ldi	r25, 0x00	; 0
 856:	0e 94 77 00 	call	0xee	; 0xee <Send_A_String>
		
		if(PINA==pad[4])
 85a:	99 b3       	in	r25, 0x19	; 25
 85c:	8c 81       	ldd	r24, Y+4	; 0x04
 85e:	98 13       	cpse	r25, r24
 860:	09 c0       	rjmp	.+18     	; 0x874 <key5+0xf8>
		{
			pressed=4;
 862:	10 93 a5 00 	sts	0x00A5, r17	; 0x8000a5 <pressed>
 866:	8b e7       	ldi	r24, 0x7B	; 123
 868:	92 e9       	ldi	r25, 0x92	; 146
 86a:	01 97       	sbiw	r24, 0x01	; 1
 86c:	f1 f7       	brne	.-4      	; 0x86a <key5+0xee>
 86e:	00 c0       	rjmp	.+0      	; 0x870 <key5+0xf4>
 870:	00 00       	nop
 872:	0b c0       	rjmp	.+22     	; 0x88a <key5+0x10e>
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
 874:	99 b3       	in	r25, 0x19	; 25
 876:	88 85       	ldd	r24, Y+8	; 0x08
 878:	98 13       	cpse	r25, r24
 87a:	07 c0       	rjmp	.+14     	; 0x88a <key5+0x10e>
 87c:	8c b5       	in	r24, 0x2c	; 44
 87e:	9d b5       	in	r25, 0x2d	; 45
 880:	89 3e       	cpi	r24, 0xE9	; 233
 882:	9d 4f       	sbci	r25, 0xFD	; 253
 884:	10 f0       	brcs	.+4      	; 0x88a <key5+0x10e>
		pressed=5;
 886:	00 93 a5 00 	sts	0x00A5, r16	; 0x8000a5 <pressed>
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while(pressed==3)
 88a:	80 91 a5 00 	lds	r24, 0x00A5	; 0x8000a5 <pressed>
 88e:	83 30       	cpi	r24, 0x03	; 3
 890:	d9 f2       	breq	.-74     	; 0x848 <key5+0xcc>
	while(pressed==4)
	{
		Send_A_Command(0x80+z) ;
		Send_A_String("t");
		
		if(PINA==pad[4])
 892:	c0 e6       	ldi	r28, 0x60	; 96
 894:	d0 e0       	ldi	r29, 0x00	; 0
			pressed=1;
			_delay_ms(30);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
 896:	05 e0       	ldi	r16, 0x05	; 5
		Send_A_Command(0x80+z) ;
		Send_A_String("t");
		
		if(PINA==pad[4])
		{
			pressed=1;
 898:	11 e0       	ldi	r17, 0x01	; 1
 89a:	21 c0       	rjmp	.+66     	; 0x8de <key5+0x162>
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while(pressed==4)
	{
		Send_A_Command(0x80+z) ;
 89c:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <__data_end>
 8a0:	80 58       	subi	r24, 0x80	; 128
 8a2:	0e 94 5e 00 	call	0xbc	; 0xbc <Send_A_Command>
		Send_A_String("t");
 8a6:	8f e8       	ldi	r24, 0x8F	; 143
 8a8:	90 e0       	ldi	r25, 0x00	; 0
 8aa:	0e 94 77 00 	call	0xee	; 0xee <Send_A_String>
		
		if(PINA==pad[4])
 8ae:	99 b3       	in	r25, 0x19	; 25
 8b0:	8c 81       	ldd	r24, Y+4	; 0x04
 8b2:	98 13       	cpse	r25, r24
 8b4:	09 c0       	rjmp	.+18     	; 0x8c8 <key5+0x14c>
		{
			pressed=1;
 8b6:	10 93 a5 00 	sts	0x00A5, r17	; 0x8000a5 <pressed>
 8ba:	8b e4       	ldi	r24, 0x4B	; 75
 8bc:	9d e1       	ldi	r25, 0x1D	; 29
 8be:	01 97       	sbiw	r24, 0x01	; 1
 8c0:	f1 f7       	brne	.-4      	; 0x8be <key5+0x142>
 8c2:	00 c0       	rjmp	.+0      	; 0x8c4 <key5+0x148>
 8c4:	00 00       	nop
 8c6:	0b c0       	rjmp	.+22     	; 0x8de <key5+0x162>
			_delay_ms(30);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
 8c8:	99 b3       	in	r25, 0x19	; 25
 8ca:	88 85       	ldd	r24, Y+8	; 0x08
 8cc:	98 13       	cpse	r25, r24
 8ce:	07 c0       	rjmp	.+14     	; 0x8de <key5+0x162>
 8d0:	8c b5       	in	r24, 0x2c	; 44
 8d2:	9d b5       	in	r25, 0x2d	; 45
 8d4:	89 3e       	cpi	r24, 0xE9	; 233
 8d6:	9d 4f       	sbci	r25, 0xFD	; 253
 8d8:	10 f0       	brcs	.+4      	; 0x8de <key5+0x162>
		pressed=5;
 8da:	00 93 a5 00 	sts	0x00A5, r16	; 0x8000a5 <pressed>
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while(pressed==4)
 8de:	80 91 a5 00 	lds	r24, 0x00A5	; 0x8000a5 <pressed>
 8e2:	84 30       	cpi	r24, 0x04	; 4
 8e4:	d9 f2       	breq	.-74     	; 0x89c <key5+0x120>
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while(pressed==5&&PINA==pad[8])
 8e6:	85 30       	cpi	r24, 0x05	; 5
 8e8:	91 f4       	brne	.+36     	; 0x90e <key5+0x192>
 8ea:	99 b3       	in	r25, 0x19	; 25
 8ec:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <__data_start+0x8>
 8f0:	98 13       	cpse	r25, r24
 8f2:	0d c0       	rjmp	.+26     	; 0x90e <key5+0x192>
	{
		z++;
 8f4:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <__data_end>
 8f8:	91 e0       	ldi	r25, 0x01	; 1
 8fa:	98 0f       	add	r25, r24
 8fc:	90 93 a4 00 	sts	0x00A4, r25	; 0x8000a4 <__data_end>
		Send_A_Command(0x80+z)  ;
 900:	8f 57       	subi	r24, 0x7F	; 127
 902:	0e 94 5e 00 	call	0xbc	; 0xbc <Send_A_Command>
		TCNT1 = 0 ;
 906:	1d bc       	out	0x2d, r1	; 45
 908:	1c bc       	out	0x2c, r1	; 44
		pressed=0 ;
 90a:	10 92 a5 00 	sts	0x00A5, r1	; 0x8000a5 <pressed>
	}}
 90e:	df 91       	pop	r29
 910:	cf 91       	pop	r28
 912:	1f 91       	pop	r17
 914:	0f 91       	pop	r16
 916:	08 95       	ret

00000918 <key6>:
void key6() {uint8_t x=150 ;
 918:	0f 93       	push	r16
 91a:	1f 93       	push	r17
 91c:	cf 93       	push	r28
 91e:	df 93       	push	r29
	pressed=1 ;
 920:	81 e0       	ldi	r24, 0x01	; 1
 922:	80 93 a5 00 	sts	0x00A5, r24	; 0x8000a5 <pressed>
 926:	8b e7       	ldi	r24, 0x7B	; 123
 928:	92 e9       	ldi	r25, 0x92	; 146
 92a:	01 97       	sbiw	r24, 0x01	; 1
 92c:	f1 f7       	brne	.-4      	; 0x92a <key6+0x12>
 92e:	00 c0       	rjmp	.+0      	; 0x930 <key6+0x18>
 930:	00 00       	nop
	while(pressed==1)
	{
		Send_A_Command(0x80+z) ;
		Send_A_String("u");
		
		if (PINA==pad[5])
 932:	c0 e6       	ldi	r28, 0x60	; 96
 934:	d0 e0       	ldi	r29, 0x00	; 0
			pressed=2;
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
 936:	05 e0       	ldi	r16, 0x05	; 5
		Send_A_Command(0x80+z) ;
		Send_A_String("u");
		
		if (PINA==pad[5])
		{
			pressed=2;
 938:	12 e0       	ldi	r17, 0x02	; 2
 93a:	21 c0       	rjmp	.+66     	; 0x97e <key6+0x66>
void key6() {uint8_t x=150 ;
	pressed=1 ;
	_delay_ms(x);
	while(pressed==1)
	{
		Send_A_Command(0x80+z) ;
 93c:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <__data_end>
 940:	80 58       	subi	r24, 0x80	; 128
 942:	0e 94 5e 00 	call	0xbc	; 0xbc <Send_A_Command>
		Send_A_String("u");
 946:	81 e9       	ldi	r24, 0x91	; 145
 948:	90 e0       	ldi	r25, 0x00	; 0
 94a:	0e 94 77 00 	call	0xee	; 0xee <Send_A_String>
		
		if (PINA==pad[5])
 94e:	99 b3       	in	r25, 0x19	; 25
 950:	8d 81       	ldd	r24, Y+5	; 0x05
 952:	98 13       	cpse	r25, r24
 954:	09 c0       	rjmp	.+18     	; 0x968 <key6+0x50>
		{
			pressed=2;
 956:	10 93 a5 00 	sts	0x00A5, r17	; 0x8000a5 <pressed>
 95a:	8b e7       	ldi	r24, 0x7B	; 123
 95c:	92 e9       	ldi	r25, 0x92	; 146
 95e:	01 97       	sbiw	r24, 0x01	; 1
 960:	f1 f7       	brne	.-4      	; 0x95e <key6+0x46>
 962:	00 c0       	rjmp	.+0      	; 0x964 <key6+0x4c>
 964:	00 00       	nop
 966:	0b c0       	rjmp	.+22     	; 0x97e <key6+0x66>
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
 968:	99 b3       	in	r25, 0x19	; 25
 96a:	88 85       	ldd	r24, Y+8	; 0x08
 96c:	98 13       	cpse	r25, r24
 96e:	07 c0       	rjmp	.+14     	; 0x97e <key6+0x66>
 970:	8c b5       	in	r24, 0x2c	; 44
 972:	9d b5       	in	r25, 0x2d	; 45
 974:	89 3e       	cpi	r24, 0xE9	; 233
 976:	9d 4f       	sbci	r25, 0xFD	; 253
 978:	10 f0       	brcs	.+4      	; 0x97e <key6+0x66>
		pressed=5;
 97a:	00 93 a5 00 	sts	0x00A5, r16	; 0x8000a5 <pressed>
		pressed=0 ;
	}}
void key6() {uint8_t x=150 ;
	pressed=1 ;
	_delay_ms(x);
	while(pressed==1)
 97e:	80 91 a5 00 	lds	r24, 0x00A5	; 0x8000a5 <pressed>
 982:	81 30       	cpi	r24, 0x01	; 1
 984:	d9 f2       	breq	.-74     	; 0x93c <key6+0x24>
	while (pressed==2)
	{
		Send_A_Command(0x80+z) ;
		Send_A_String("v");
		
		if(PINA==pad[5])
 986:	c0 e6       	ldi	r28, 0x60	; 96
 988:	d0 e0       	ldi	r29, 0x00	; 0
			pressed=3;
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
 98a:	05 e0       	ldi	r16, 0x05	; 5
		Send_A_Command(0x80+z) ;
		Send_A_String("v");
		
		if(PINA==pad[5])
		{
			pressed=3;
 98c:	13 e0       	ldi	r17, 0x03	; 3
 98e:	21 c0       	rjmp	.+66     	; 0x9d2 <key6+0xba>
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while (pressed==2)
	{
		Send_A_Command(0x80+z) ;
 990:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <__data_end>
 994:	80 58       	subi	r24, 0x80	; 128
 996:	0e 94 5e 00 	call	0xbc	; 0xbc <Send_A_Command>
		Send_A_String("v");
 99a:	83 e9       	ldi	r24, 0x93	; 147
 99c:	90 e0       	ldi	r25, 0x00	; 0
 99e:	0e 94 77 00 	call	0xee	; 0xee <Send_A_String>
		
		if(PINA==pad[5])
 9a2:	99 b3       	in	r25, 0x19	; 25
 9a4:	8d 81       	ldd	r24, Y+5	; 0x05
 9a6:	98 13       	cpse	r25, r24
 9a8:	09 c0       	rjmp	.+18     	; 0x9bc <key6+0xa4>
		{
			pressed=3;
 9aa:	10 93 a5 00 	sts	0x00A5, r17	; 0x8000a5 <pressed>
 9ae:	8b e7       	ldi	r24, 0x7B	; 123
 9b0:	92 e9       	ldi	r25, 0x92	; 146
 9b2:	01 97       	sbiw	r24, 0x01	; 1
 9b4:	f1 f7       	brne	.-4      	; 0x9b2 <key6+0x9a>
 9b6:	00 c0       	rjmp	.+0      	; 0x9b8 <key6+0xa0>
 9b8:	00 00       	nop
 9ba:	0b c0       	rjmp	.+22     	; 0x9d2 <key6+0xba>
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
 9bc:	99 b3       	in	r25, 0x19	; 25
 9be:	88 85       	ldd	r24, Y+8	; 0x08
 9c0:	98 13       	cpse	r25, r24
 9c2:	07 c0       	rjmp	.+14     	; 0x9d2 <key6+0xba>
 9c4:	8c b5       	in	r24, 0x2c	; 44
 9c6:	9d b5       	in	r25, 0x2d	; 45
 9c8:	89 3e       	cpi	r24, 0xE9	; 233
 9ca:	9d 4f       	sbci	r25, 0xFD	; 253
 9cc:	10 f0       	brcs	.+4      	; 0x9d2 <key6+0xba>
		pressed=5;
 9ce:	00 93 a5 00 	sts	0x00A5, r16	; 0x8000a5 <pressed>
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while (pressed==2)
 9d2:	80 91 a5 00 	lds	r24, 0x00A5	; 0x8000a5 <pressed>
 9d6:	82 30       	cpi	r24, 0x02	; 2
 9d8:	d9 f2       	breq	.-74     	; 0x990 <key6+0x78>
	while(pressed==3)
	{
		Send_A_Command(0x80+z) ;
		Send_A_String("w");
		
		if(PINA==pad[5])
 9da:	c0 e6       	ldi	r28, 0x60	; 96
 9dc:	d0 e0       	ldi	r29, 0x00	; 0
			pressed=4;
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
 9de:	05 e0       	ldi	r16, 0x05	; 5
		Send_A_Command(0x80+z) ;
		Send_A_String("w");
		
		if(PINA==pad[5])
		{
			pressed=4;
 9e0:	14 e0       	ldi	r17, 0x04	; 4
 9e2:	21 c0       	rjmp	.+66     	; 0xa26 <key6+0x10e>
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while(pressed==3)
	{
		Send_A_Command(0x80+z) ;
 9e4:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <__data_end>
 9e8:	80 58       	subi	r24, 0x80	; 128
 9ea:	0e 94 5e 00 	call	0xbc	; 0xbc <Send_A_Command>
		Send_A_String("w");
 9ee:	85 e9       	ldi	r24, 0x95	; 149
 9f0:	90 e0       	ldi	r25, 0x00	; 0
 9f2:	0e 94 77 00 	call	0xee	; 0xee <Send_A_String>
		
		if(PINA==pad[5])
 9f6:	99 b3       	in	r25, 0x19	; 25
 9f8:	8d 81       	ldd	r24, Y+5	; 0x05
 9fa:	98 13       	cpse	r25, r24
 9fc:	09 c0       	rjmp	.+18     	; 0xa10 <key6+0xf8>
		{
			pressed=4;
 9fe:	10 93 a5 00 	sts	0x00A5, r17	; 0x8000a5 <pressed>
 a02:	8b e7       	ldi	r24, 0x7B	; 123
 a04:	92 e9       	ldi	r25, 0x92	; 146
 a06:	01 97       	sbiw	r24, 0x01	; 1
 a08:	f1 f7       	brne	.-4      	; 0xa06 <key6+0xee>
 a0a:	00 c0       	rjmp	.+0      	; 0xa0c <key6+0xf4>
 a0c:	00 00       	nop
 a0e:	0b c0       	rjmp	.+22     	; 0xa26 <key6+0x10e>
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
 a10:	99 b3       	in	r25, 0x19	; 25
 a12:	88 85       	ldd	r24, Y+8	; 0x08
 a14:	98 13       	cpse	r25, r24
 a16:	07 c0       	rjmp	.+14     	; 0xa26 <key6+0x10e>
 a18:	8c b5       	in	r24, 0x2c	; 44
 a1a:	9d b5       	in	r25, 0x2d	; 45
 a1c:	89 3e       	cpi	r24, 0xE9	; 233
 a1e:	9d 4f       	sbci	r25, 0xFD	; 253
 a20:	10 f0       	brcs	.+4      	; 0xa26 <key6+0x10e>
		pressed=5;
 a22:	00 93 a5 00 	sts	0x00A5, r16	; 0x8000a5 <pressed>
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while(pressed==3)
 a26:	80 91 a5 00 	lds	r24, 0x00A5	; 0x8000a5 <pressed>
 a2a:	83 30       	cpi	r24, 0x03	; 3
 a2c:	d9 f2       	breq	.-74     	; 0x9e4 <key6+0xcc>
	while(pressed==4)
	{
		Send_A_Command(0x80+z) ;
		Send_A_String("x");
		
		if(PINA==pad[5])
 a2e:	c0 e6       	ldi	r28, 0x60	; 96
 a30:	d0 e0       	ldi	r29, 0x00	; 0
			pressed=1;
			_delay_ms(30);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
 a32:	05 e0       	ldi	r16, 0x05	; 5
		Send_A_Command(0x80+z) ;
		Send_A_String("x");
		
		if(PINA==pad[5])
		{
			pressed=1;
 a34:	11 e0       	ldi	r17, 0x01	; 1
 a36:	21 c0       	rjmp	.+66     	; 0xa7a <key6+0x162>
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while(pressed==4)
	{
		Send_A_Command(0x80+z) ;
 a38:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <__data_end>
 a3c:	80 58       	subi	r24, 0x80	; 128
 a3e:	0e 94 5e 00 	call	0xbc	; 0xbc <Send_A_Command>
		Send_A_String("x");
 a42:	87 e9       	ldi	r24, 0x97	; 151
 a44:	90 e0       	ldi	r25, 0x00	; 0
 a46:	0e 94 77 00 	call	0xee	; 0xee <Send_A_String>
		
		if(PINA==pad[5])
 a4a:	99 b3       	in	r25, 0x19	; 25
 a4c:	8d 81       	ldd	r24, Y+5	; 0x05
 a4e:	98 13       	cpse	r25, r24
 a50:	09 c0       	rjmp	.+18     	; 0xa64 <key6+0x14c>
		{
			pressed=1;
 a52:	10 93 a5 00 	sts	0x00A5, r17	; 0x8000a5 <pressed>
 a56:	8b e4       	ldi	r24, 0x4B	; 75
 a58:	9d e1       	ldi	r25, 0x1D	; 29
 a5a:	01 97       	sbiw	r24, 0x01	; 1
 a5c:	f1 f7       	brne	.-4      	; 0xa5a <key6+0x142>
 a5e:	00 c0       	rjmp	.+0      	; 0xa60 <key6+0x148>
 a60:	00 00       	nop
 a62:	0b c0       	rjmp	.+22     	; 0xa7a <key6+0x162>
			_delay_ms(30);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
 a64:	99 b3       	in	r25, 0x19	; 25
 a66:	88 85       	ldd	r24, Y+8	; 0x08
 a68:	98 13       	cpse	r25, r24
 a6a:	07 c0       	rjmp	.+14     	; 0xa7a <key6+0x162>
 a6c:	8c b5       	in	r24, 0x2c	; 44
 a6e:	9d b5       	in	r25, 0x2d	; 45
 a70:	89 3e       	cpi	r24, 0xE9	; 233
 a72:	9d 4f       	sbci	r25, 0xFD	; 253
 a74:	10 f0       	brcs	.+4      	; 0xa7a <key6+0x162>
		pressed=5;
 a76:	00 93 a5 00 	sts	0x00A5, r16	; 0x8000a5 <pressed>
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while(pressed==4)
 a7a:	80 91 a5 00 	lds	r24, 0x00A5	; 0x8000a5 <pressed>
 a7e:	84 30       	cpi	r24, 0x04	; 4
 a80:	d9 f2       	breq	.-74     	; 0xa38 <key6+0x120>
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while(pressed==5&&PINA==pad[8])
 a82:	85 30       	cpi	r24, 0x05	; 5
 a84:	91 f4       	brne	.+36     	; 0xaaa <key6+0x192>
 a86:	99 b3       	in	r25, 0x19	; 25
 a88:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <__data_start+0x8>
 a8c:	98 13       	cpse	r25, r24
 a8e:	0d c0       	rjmp	.+26     	; 0xaaa <key6+0x192>
	{
		z++;
 a90:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <__data_end>
 a94:	91 e0       	ldi	r25, 0x01	; 1
 a96:	98 0f       	add	r25, r24
 a98:	90 93 a4 00 	sts	0x00A4, r25	; 0x8000a4 <__data_end>
		Send_A_Command(0x80+z)  ;
 a9c:	8f 57       	subi	r24, 0x7F	; 127
 a9e:	0e 94 5e 00 	call	0xbc	; 0xbc <Send_A_Command>
		TCNT1 = 0 ;
 aa2:	1d bc       	out	0x2d, r1	; 45
 aa4:	1c bc       	out	0x2c, r1	; 44
		pressed=0 ;
 aa6:	10 92 a5 00 	sts	0x00A5, r1	; 0x8000a5 <pressed>
	}}
 aaa:	df 91       	pop	r29
 aac:	cf 91       	pop	r28
 aae:	1f 91       	pop	r17
 ab0:	0f 91       	pop	r16
 ab2:	08 95       	ret

00000ab4 <key7>:
void key7() 
{
 ab4:	0f 93       	push	r16
 ab6:	1f 93       	push	r17
 ab8:	cf 93       	push	r28
 aba:	df 93       	push	r29
	uint8_t x=150 ;
	pressed=1 ;
 abc:	81 e0       	ldi	r24, 0x01	; 1
 abe:	80 93 a5 00 	sts	0x00A5, r24	; 0x8000a5 <pressed>
 ac2:	8b e7       	ldi	r24, 0x7B	; 123
 ac4:	92 e9       	ldi	r25, 0x92	; 146
 ac6:	01 97       	sbiw	r24, 0x01	; 1
 ac8:	f1 f7       	brne	.-4      	; 0xac6 <key7+0x12>
 aca:	00 c0       	rjmp	.+0      	; 0xacc <key7+0x18>
 acc:	00 00       	nop
	while(pressed==1)
	{
		Send_A_Command(0x80+z) ;
		Send_A_String("y");
		
		if (PINA==pad[6])
 ace:	c0 e6       	ldi	r28, 0x60	; 96
 ad0:	d0 e0       	ldi	r29, 0x00	; 0
			pressed=2;
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
 ad2:	05 e0       	ldi	r16, 0x05	; 5
		Send_A_Command(0x80+z) ;
		Send_A_String("y");
		
		if (PINA==pad[6])
		{
			pressed=2;
 ad4:	12 e0       	ldi	r17, 0x02	; 2
 ad6:	21 c0       	rjmp	.+66     	; 0xb1a <key7+0x66>
	uint8_t x=150 ;
	pressed=1 ;
	_delay_ms(x);
	while(pressed==1)
	{
		Send_A_Command(0x80+z) ;
 ad8:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <__data_end>
 adc:	80 58       	subi	r24, 0x80	; 128
 ade:	0e 94 5e 00 	call	0xbc	; 0xbc <Send_A_Command>
		Send_A_String("y");
 ae2:	89 e9       	ldi	r24, 0x99	; 153
 ae4:	90 e0       	ldi	r25, 0x00	; 0
 ae6:	0e 94 77 00 	call	0xee	; 0xee <Send_A_String>
		
		if (PINA==pad[6])
 aea:	99 b3       	in	r25, 0x19	; 25
 aec:	8e 81       	ldd	r24, Y+6	; 0x06
 aee:	98 13       	cpse	r25, r24
 af0:	09 c0       	rjmp	.+18     	; 0xb04 <key7+0x50>
		{
			pressed=2;
 af2:	10 93 a5 00 	sts	0x00A5, r17	; 0x8000a5 <pressed>
 af6:	8b e7       	ldi	r24, 0x7B	; 123
 af8:	92 e9       	ldi	r25, 0x92	; 146
 afa:	01 97       	sbiw	r24, 0x01	; 1
 afc:	f1 f7       	brne	.-4      	; 0xafa <key7+0x46>
 afe:	00 c0       	rjmp	.+0      	; 0xb00 <key7+0x4c>
 b00:	00 00       	nop
 b02:	0b c0       	rjmp	.+22     	; 0xb1a <key7+0x66>
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
 b04:	99 b3       	in	r25, 0x19	; 25
 b06:	88 85       	ldd	r24, Y+8	; 0x08
 b08:	98 13       	cpse	r25, r24
 b0a:	07 c0       	rjmp	.+14     	; 0xb1a <key7+0x66>
 b0c:	8c b5       	in	r24, 0x2c	; 44
 b0e:	9d b5       	in	r25, 0x2d	; 45
 b10:	89 3e       	cpi	r24, 0xE9	; 233
 b12:	9d 4f       	sbci	r25, 0xFD	; 253
 b14:	10 f0       	brcs	.+4      	; 0xb1a <key7+0x66>
		pressed=5;
 b16:	00 93 a5 00 	sts	0x00A5, r16	; 0x8000a5 <pressed>
void key7() 
{
	uint8_t x=150 ;
	pressed=1 ;
	_delay_ms(x);
	while(pressed==1)
 b1a:	80 91 a5 00 	lds	r24, 0x00A5	; 0x8000a5 <pressed>
 b1e:	81 30       	cpi	r24, 0x01	; 1
 b20:	d9 f2       	breq	.-74     	; 0xad8 <key7+0x24>
	while (pressed==2)
	{
		Send_A_Command(0x80+z) ;
		Send_A_String("z");
		
		if(PINA==pad[6])
 b22:	c0 e6       	ldi	r28, 0x60	; 96
 b24:	d0 e0       	ldi	r29, 0x00	; 0
			pressed=3;
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
 b26:	05 e0       	ldi	r16, 0x05	; 5
		Send_A_Command(0x80+z) ;
		Send_A_String("z");
		
		if(PINA==pad[6])
		{
			pressed=3;
 b28:	13 e0       	ldi	r17, 0x03	; 3
 b2a:	21 c0       	rjmp	.+66     	; 0xb6e <key7+0xba>
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while (pressed==2)
	{
		Send_A_Command(0x80+z) ;
 b2c:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <__data_end>
 b30:	80 58       	subi	r24, 0x80	; 128
 b32:	0e 94 5e 00 	call	0xbc	; 0xbc <Send_A_Command>
		Send_A_String("z");
 b36:	8b e9       	ldi	r24, 0x9B	; 155
 b38:	90 e0       	ldi	r25, 0x00	; 0
 b3a:	0e 94 77 00 	call	0xee	; 0xee <Send_A_String>
		
		if(PINA==pad[6])
 b3e:	99 b3       	in	r25, 0x19	; 25
 b40:	8e 81       	ldd	r24, Y+6	; 0x06
 b42:	98 13       	cpse	r25, r24
 b44:	09 c0       	rjmp	.+18     	; 0xb58 <key7+0xa4>
		{
			pressed=3;
 b46:	10 93 a5 00 	sts	0x00A5, r17	; 0x8000a5 <pressed>
 b4a:	8b e7       	ldi	r24, 0x7B	; 123
 b4c:	92 e9       	ldi	r25, 0x92	; 146
 b4e:	01 97       	sbiw	r24, 0x01	; 1
 b50:	f1 f7       	brne	.-4      	; 0xb4e <key7+0x9a>
 b52:	00 c0       	rjmp	.+0      	; 0xb54 <key7+0xa0>
 b54:	00 00       	nop
 b56:	0b c0       	rjmp	.+22     	; 0xb6e <key7+0xba>
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
 b58:	99 b3       	in	r25, 0x19	; 25
 b5a:	88 85       	ldd	r24, Y+8	; 0x08
 b5c:	98 13       	cpse	r25, r24
 b5e:	07 c0       	rjmp	.+14     	; 0xb6e <key7+0xba>
 b60:	8c b5       	in	r24, 0x2c	; 44
 b62:	9d b5       	in	r25, 0x2d	; 45
 b64:	89 3e       	cpi	r24, 0xE9	; 233
 b66:	9d 4f       	sbci	r25, 0xFD	; 253
 b68:	10 f0       	brcs	.+4      	; 0xb6e <key7+0xba>
		pressed=5;
 b6a:	00 93 a5 00 	sts	0x00A5, r16	; 0x8000a5 <pressed>
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while (pressed==2)
 b6e:	80 91 a5 00 	lds	r24, 0x00A5	; 0x8000a5 <pressed>
 b72:	82 30       	cpi	r24, 0x02	; 2
 b74:	d9 f2       	breq	.-74     	; 0xb2c <key7+0x78>
	while(pressed==3)
	{
		Send_A_Command(0x80+z) ;
		Send_A_String("-");
		
		if(PINA==pad[6])
 b76:	c0 e6       	ldi	r28, 0x60	; 96
 b78:	d0 e0       	ldi	r29, 0x00	; 0
			pressed=4;
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
 b7a:	05 e0       	ldi	r16, 0x05	; 5
		Send_A_Command(0x80+z) ;
		Send_A_String("-");
		
		if(PINA==pad[6])
		{
			pressed=4;
 b7c:	14 e0       	ldi	r17, 0x04	; 4
 b7e:	21 c0       	rjmp	.+66     	; 0xbc2 <key7+0x10e>
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while(pressed==3)
	{
		Send_A_Command(0x80+z) ;
 b80:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <__data_end>
 b84:	80 58       	subi	r24, 0x80	; 128
 b86:	0e 94 5e 00 	call	0xbc	; 0xbc <Send_A_Command>
		Send_A_String("-");
 b8a:	8d e9       	ldi	r24, 0x9D	; 157
 b8c:	90 e0       	ldi	r25, 0x00	; 0
 b8e:	0e 94 77 00 	call	0xee	; 0xee <Send_A_String>
		
		if(PINA==pad[6])
 b92:	99 b3       	in	r25, 0x19	; 25
 b94:	8e 81       	ldd	r24, Y+6	; 0x06
 b96:	98 13       	cpse	r25, r24
 b98:	09 c0       	rjmp	.+18     	; 0xbac <key7+0xf8>
		{
			pressed=4;
 b9a:	10 93 a5 00 	sts	0x00A5, r17	; 0x8000a5 <pressed>
 b9e:	8b e7       	ldi	r24, 0x7B	; 123
 ba0:	92 e9       	ldi	r25, 0x92	; 146
 ba2:	01 97       	sbiw	r24, 0x01	; 1
 ba4:	f1 f7       	brne	.-4      	; 0xba2 <key7+0xee>
 ba6:	00 c0       	rjmp	.+0      	; 0xba8 <key7+0xf4>
 ba8:	00 00       	nop
 baa:	0b c0       	rjmp	.+22     	; 0xbc2 <key7+0x10e>
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
 bac:	99 b3       	in	r25, 0x19	; 25
 bae:	88 85       	ldd	r24, Y+8	; 0x08
 bb0:	98 13       	cpse	r25, r24
 bb2:	07 c0       	rjmp	.+14     	; 0xbc2 <key7+0x10e>
 bb4:	8c b5       	in	r24, 0x2c	; 44
 bb6:	9d b5       	in	r25, 0x2d	; 45
 bb8:	89 3e       	cpi	r24, 0xE9	; 233
 bba:	9d 4f       	sbci	r25, 0xFD	; 253
 bbc:	10 f0       	brcs	.+4      	; 0xbc2 <key7+0x10e>
		pressed=5;
 bbe:	00 93 a5 00 	sts	0x00A5, r16	; 0x8000a5 <pressed>
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while(pressed==3)
 bc2:	80 91 a5 00 	lds	r24, 0x00A5	; 0x8000a5 <pressed>
 bc6:	83 30       	cpi	r24, 0x03	; 3
 bc8:	d9 f2       	breq	.-74     	; 0xb80 <key7+0xcc>
	while(pressed==4)
	{
		Send_A_Command(0x80+z) ;
		Send_A_String("#") ;
		
		if(PINA==pad[6])
 bca:	c0 e6       	ldi	r28, 0x60	; 96
 bcc:	d0 e0       	ldi	r29, 0x00	; 0
			pressed=1;
			_delay_ms(30);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
 bce:	05 e0       	ldi	r16, 0x05	; 5
		Send_A_Command(0x80+z) ;
		Send_A_String("#") ;
		
		if(PINA==pad[6])
		{
			pressed=1;
 bd0:	11 e0       	ldi	r17, 0x01	; 1
 bd2:	21 c0       	rjmp	.+66     	; 0xc16 <key7+0x162>
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while(pressed==4)
	{
		Send_A_Command(0x80+z) ;
 bd4:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <__data_end>
 bd8:	80 58       	subi	r24, 0x80	; 128
 bda:	0e 94 5e 00 	call	0xbc	; 0xbc <Send_A_Command>
		Send_A_String("#") ;
 bde:	8f e9       	ldi	r24, 0x9F	; 159
 be0:	90 e0       	ldi	r25, 0x00	; 0
 be2:	0e 94 77 00 	call	0xee	; 0xee <Send_A_String>
		
		if(PINA==pad[6])
 be6:	99 b3       	in	r25, 0x19	; 25
 be8:	8e 81       	ldd	r24, Y+6	; 0x06
 bea:	98 13       	cpse	r25, r24
 bec:	09 c0       	rjmp	.+18     	; 0xc00 <key7+0x14c>
		{
			pressed=1;
 bee:	10 93 a5 00 	sts	0x00A5, r17	; 0x8000a5 <pressed>
 bf2:	8b e4       	ldi	r24, 0x4B	; 75
 bf4:	9d e1       	ldi	r25, 0x1D	; 29
 bf6:	01 97       	sbiw	r24, 0x01	; 1
 bf8:	f1 f7       	brne	.-4      	; 0xbf6 <key7+0x142>
 bfa:	00 c0       	rjmp	.+0      	; 0xbfc <key7+0x148>
 bfc:	00 00       	nop
 bfe:	0b c0       	rjmp	.+22     	; 0xc16 <key7+0x162>
			_delay_ms(30);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
 c00:	99 b3       	in	r25, 0x19	; 25
 c02:	88 85       	ldd	r24, Y+8	; 0x08
 c04:	98 13       	cpse	r25, r24
 c06:	07 c0       	rjmp	.+14     	; 0xc16 <key7+0x162>
 c08:	8c b5       	in	r24, 0x2c	; 44
 c0a:	9d b5       	in	r25, 0x2d	; 45
 c0c:	89 3e       	cpi	r24, 0xE9	; 233
 c0e:	9d 4f       	sbci	r25, 0xFD	; 253
 c10:	10 f0       	brcs	.+4      	; 0xc16 <key7+0x162>
		pressed=5;
 c12:	00 93 a5 00 	sts	0x00A5, r16	; 0x8000a5 <pressed>
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while(pressed==4)
 c16:	80 91 a5 00 	lds	r24, 0x00A5	; 0x8000a5 <pressed>
 c1a:	84 30       	cpi	r24, 0x04	; 4
 c1c:	d9 f2       	breq	.-74     	; 0xbd4 <key7+0x120>
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while(pressed==5&&PINA==pad[8])
 c1e:	85 30       	cpi	r24, 0x05	; 5
 c20:	91 f4       	brne	.+36     	; 0xc46 <key7+0x192>
 c22:	99 b3       	in	r25, 0x19	; 25
 c24:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <__data_start+0x8>
 c28:	98 13       	cpse	r25, r24
 c2a:	0d c0       	rjmp	.+26     	; 0xc46 <key7+0x192>
	{
		z++;
 c2c:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <__data_end>
 c30:	91 e0       	ldi	r25, 0x01	; 1
 c32:	98 0f       	add	r25, r24
 c34:	90 93 a4 00 	sts	0x00A4, r25	; 0x8000a4 <__data_end>
		Send_A_Command(0x80+z)  ;
 c38:	8f 57       	subi	r24, 0x7F	; 127
 c3a:	0e 94 5e 00 	call	0xbc	; 0xbc <Send_A_Command>
		TCNT1 = 0 ;
 c3e:	1d bc       	out	0x2d, r1	; 45
 c40:	1c bc       	out	0x2c, r1	; 44
		pressed=0 ;
 c42:	10 92 a5 00 	sts	0x00A5, r1	; 0x8000a5 <pressed>
	}}
 c46:	df 91       	pop	r29
 c48:	cf 91       	pop	r28
 c4a:	1f 91       	pop	r17
 c4c:	0f 91       	pop	r16
 c4e:	08 95       	ret

00000c50 <key8>:
void key8() {
 c50:	0f 93       	push	r16
 c52:	1f 93       	push	r17
 c54:	cf 93       	push	r28
 c56:	df 93       	push	r29
    uint8_t x=150 ;
	pressed=1 ;
 c58:	81 e0       	ldi	r24, 0x01	; 1
 c5a:	80 93 a5 00 	sts	0x00A5, r24	; 0x8000a5 <pressed>
 c5e:	8b e7       	ldi	r24, 0x7B	; 123
 c60:	92 e9       	ldi	r25, 0x92	; 146
 c62:	01 97       	sbiw	r24, 0x01	; 1
 c64:	f1 f7       	brne	.-4      	; 0xc62 <key8+0x12>
 c66:	00 c0       	rjmp	.+0      	; 0xc68 <key8+0x18>
 c68:	00 00       	nop
	while(pressed==1)
	{
		Send_A_Command(0x80+z) ;
		Send_A_String(" ");
		
		if (PINA==pad[7])
 c6a:	c0 e6       	ldi	r28, 0x60	; 96
 c6c:	d0 e0       	ldi	r29, 0x00	; 0
			pressed=2;
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
 c6e:	05 e0       	ldi	r16, 0x05	; 5
		Send_A_Command(0x80+z) ;
		Send_A_String(" ");
		
		if (PINA==pad[7])
		{
			pressed=2;
 c70:	12 e0       	ldi	r17, 0x02	; 2
 c72:	21 c0       	rjmp	.+66     	; 0xcb6 <key8+0x66>
    uint8_t x=150 ;
	pressed=1 ;
	_delay_ms(x);
	while(pressed==1)
	{
		Send_A_Command(0x80+z) ;
 c74:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <__data_end>
 c78:	80 58       	subi	r24, 0x80	; 128
 c7a:	0e 94 5e 00 	call	0xbc	; 0xbc <Send_A_Command>
		Send_A_String(" ");
 c7e:	81 ea       	ldi	r24, 0xA1	; 161
 c80:	90 e0       	ldi	r25, 0x00	; 0
 c82:	0e 94 77 00 	call	0xee	; 0xee <Send_A_String>
		
		if (PINA==pad[7])
 c86:	99 b3       	in	r25, 0x19	; 25
 c88:	8f 81       	ldd	r24, Y+7	; 0x07
 c8a:	98 13       	cpse	r25, r24
 c8c:	09 c0       	rjmp	.+18     	; 0xca0 <key8+0x50>
		{
			pressed=2;
 c8e:	10 93 a5 00 	sts	0x00A5, r17	; 0x8000a5 <pressed>
 c92:	8b e7       	ldi	r24, 0x7B	; 123
 c94:	92 e9       	ldi	r25, 0x92	; 146
 c96:	01 97       	sbiw	r24, 0x01	; 1
 c98:	f1 f7       	brne	.-4      	; 0xc96 <key8+0x46>
 c9a:	00 c0       	rjmp	.+0      	; 0xc9c <key8+0x4c>
 c9c:	00 00       	nop
 c9e:	0b c0       	rjmp	.+22     	; 0xcb6 <key8+0x66>
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
 ca0:	99 b3       	in	r25, 0x19	; 25
 ca2:	88 85       	ldd	r24, Y+8	; 0x08
 ca4:	98 13       	cpse	r25, r24
 ca6:	07 c0       	rjmp	.+14     	; 0xcb6 <key8+0x66>
 ca8:	8c b5       	in	r24, 0x2c	; 44
 caa:	9d b5       	in	r25, 0x2d	; 45
 cac:	89 3e       	cpi	r24, 0xE9	; 233
 cae:	9d 4f       	sbci	r25, 0xFD	; 253
 cb0:	10 f0       	brcs	.+4      	; 0xcb6 <key8+0x66>
		pressed=5;
 cb2:	00 93 a5 00 	sts	0x00A5, r16	; 0x8000a5 <pressed>
	}}
void key8() {
    uint8_t x=150 ;
	pressed=1 ;
	_delay_ms(x);
	while(pressed==1)
 cb6:	80 91 a5 00 	lds	r24, 0x00A5	; 0x8000a5 <pressed>
 cba:	81 30       	cpi	r24, 0x01	; 1
 cbc:	d9 f2       	breq	.-74     	; 0xc74 <key8+0x24>
	while (pressed==2)
	{
		Send_A_Command(0x80+z) ;
		Send_A_String(" ");
		
		if(PINA==pad[7])
 cbe:	c0 e6       	ldi	r28, 0x60	; 96
 cc0:	d0 e0       	ldi	r29, 0x00	; 0
			pressed=3;
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
 cc2:	05 e0       	ldi	r16, 0x05	; 5
		Send_A_Command(0x80+z) ;
		Send_A_String(" ");
		
		if(PINA==pad[7])
		{
			pressed=3;
 cc4:	13 e0       	ldi	r17, 0x03	; 3
 cc6:	21 c0       	rjmp	.+66     	; 0xd0a <key8+0xba>
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while (pressed==2)
	{
		Send_A_Command(0x80+z) ;
 cc8:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <__data_end>
 ccc:	80 58       	subi	r24, 0x80	; 128
 cce:	0e 94 5e 00 	call	0xbc	; 0xbc <Send_A_Command>
		Send_A_String(" ");
 cd2:	81 ea       	ldi	r24, 0xA1	; 161
 cd4:	90 e0       	ldi	r25, 0x00	; 0
 cd6:	0e 94 77 00 	call	0xee	; 0xee <Send_A_String>
		
		if(PINA==pad[7])
 cda:	99 b3       	in	r25, 0x19	; 25
 cdc:	8f 81       	ldd	r24, Y+7	; 0x07
 cde:	98 13       	cpse	r25, r24
 ce0:	09 c0       	rjmp	.+18     	; 0xcf4 <key8+0xa4>
		{
			pressed=3;
 ce2:	10 93 a5 00 	sts	0x00A5, r17	; 0x8000a5 <pressed>
 ce6:	8b e7       	ldi	r24, 0x7B	; 123
 ce8:	92 e9       	ldi	r25, 0x92	; 146
 cea:	01 97       	sbiw	r24, 0x01	; 1
 cec:	f1 f7       	brne	.-4      	; 0xcea <key8+0x9a>
 cee:	00 c0       	rjmp	.+0      	; 0xcf0 <key8+0xa0>
 cf0:	00 00       	nop
 cf2:	0b c0       	rjmp	.+22     	; 0xd0a <key8+0xba>
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
 cf4:	99 b3       	in	r25, 0x19	; 25
 cf6:	88 85       	ldd	r24, Y+8	; 0x08
 cf8:	98 13       	cpse	r25, r24
 cfa:	07 c0       	rjmp	.+14     	; 0xd0a <key8+0xba>
 cfc:	8c b5       	in	r24, 0x2c	; 44
 cfe:	9d b5       	in	r25, 0x2d	; 45
 d00:	89 3e       	cpi	r24, 0xE9	; 233
 d02:	9d 4f       	sbci	r25, 0xFD	; 253
 d04:	10 f0       	brcs	.+4      	; 0xd0a <key8+0xba>
		pressed=5;
 d06:	00 93 a5 00 	sts	0x00A5, r16	; 0x8000a5 <pressed>
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while (pressed==2)
 d0a:	80 91 a5 00 	lds	r24, 0x00A5	; 0x8000a5 <pressed>
 d0e:	82 30       	cpi	r24, 0x02	; 2
 d10:	d9 f2       	breq	.-74     	; 0xcc8 <key8+0x78>
	while(pressed==3)
	{
		Send_A_Command(0x80+z) ;
		Send_A_String(" ");
		
		if(PINA==pad[7])
 d12:	c0 e6       	ldi	r28, 0x60	; 96
 d14:	d0 e0       	ldi	r29, 0x00	; 0
			pressed=4;
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
 d16:	05 e0       	ldi	r16, 0x05	; 5
		Send_A_Command(0x80+z) ;
		Send_A_String(" ");
		
		if(PINA==pad[7])
		{
			pressed=4;
 d18:	14 e0       	ldi	r17, 0x04	; 4
 d1a:	21 c0       	rjmp	.+66     	; 0xd5e <key8+0x10e>
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while(pressed==3)
	{
		Send_A_Command(0x80+z) ;
 d1c:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <__data_end>
 d20:	80 58       	subi	r24, 0x80	; 128
 d22:	0e 94 5e 00 	call	0xbc	; 0xbc <Send_A_Command>
		Send_A_String(" ");
 d26:	81 ea       	ldi	r24, 0xA1	; 161
 d28:	90 e0       	ldi	r25, 0x00	; 0
 d2a:	0e 94 77 00 	call	0xee	; 0xee <Send_A_String>
		
		if(PINA==pad[7])
 d2e:	99 b3       	in	r25, 0x19	; 25
 d30:	8f 81       	ldd	r24, Y+7	; 0x07
 d32:	98 13       	cpse	r25, r24
 d34:	09 c0       	rjmp	.+18     	; 0xd48 <key8+0xf8>
		{
			pressed=4;
 d36:	10 93 a5 00 	sts	0x00A5, r17	; 0x8000a5 <pressed>
 d3a:	8b e7       	ldi	r24, 0x7B	; 123
 d3c:	92 e9       	ldi	r25, 0x92	; 146
 d3e:	01 97       	sbiw	r24, 0x01	; 1
 d40:	f1 f7       	brne	.-4      	; 0xd3e <key8+0xee>
 d42:	00 c0       	rjmp	.+0      	; 0xd44 <key8+0xf4>
 d44:	00 00       	nop
 d46:	0b c0       	rjmp	.+22     	; 0xd5e <key8+0x10e>
			_delay_ms(x);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
 d48:	99 b3       	in	r25, 0x19	; 25
 d4a:	88 85       	ldd	r24, Y+8	; 0x08
 d4c:	98 13       	cpse	r25, r24
 d4e:	07 c0       	rjmp	.+14     	; 0xd5e <key8+0x10e>
 d50:	8c b5       	in	r24, 0x2c	; 44
 d52:	9d b5       	in	r25, 0x2d	; 45
 d54:	89 3e       	cpi	r24, 0xE9	; 233
 d56:	9d 4f       	sbci	r25, 0xFD	; 253
 d58:	10 f0       	brcs	.+4      	; 0xd5e <key8+0x10e>
		pressed=5;
 d5a:	00 93 a5 00 	sts	0x00A5, r16	; 0x8000a5 <pressed>
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while(pressed==3)
 d5e:	80 91 a5 00 	lds	r24, 0x00A5	; 0x8000a5 <pressed>
 d62:	83 30       	cpi	r24, 0x03	; 3
 d64:	d9 f2       	breq	.-74     	; 0xd1c <key8+0xcc>
	while(pressed==4)
	{
		Send_A_Command(0x80+z) ;
		Send_A_String(" ");
		
		if(PINA==pad[7])
 d66:	c0 e6       	ldi	r28, 0x60	; 96
 d68:	d0 e0       	ldi	r29, 0x00	; 0
			pressed=1;
			_delay_ms(30);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
 d6a:	05 e0       	ldi	r16, 0x05	; 5
		Send_A_Command(0x80+z) ;
		Send_A_String(" ");
		
		if(PINA==pad[7])
		{
			pressed=1;
 d6c:	11 e0       	ldi	r17, 0x01	; 1
 d6e:	21 c0       	rjmp	.+66     	; 0xdb2 <key8+0x162>
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while(pressed==4)
	{
		Send_A_Command(0x80+z) ;
 d70:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <__data_end>
 d74:	80 58       	subi	r24, 0x80	; 128
 d76:	0e 94 5e 00 	call	0xbc	; 0xbc <Send_A_Command>
		Send_A_String(" ");
 d7a:	81 ea       	ldi	r24, 0xA1	; 161
 d7c:	90 e0       	ldi	r25, 0x00	; 0
 d7e:	0e 94 77 00 	call	0xee	; 0xee <Send_A_String>
		
		if(PINA==pad[7])
 d82:	99 b3       	in	r25, 0x19	; 25
 d84:	8f 81       	ldd	r24, Y+7	; 0x07
 d86:	98 13       	cpse	r25, r24
 d88:	09 c0       	rjmp	.+18     	; 0xd9c <key8+0x14c>
		{
			pressed=1;
 d8a:	10 93 a5 00 	sts	0x00A5, r17	; 0x8000a5 <pressed>
 d8e:	8b e4       	ldi	r24, 0x4B	; 75
 d90:	9d e1       	ldi	r25, 0x1D	; 29
 d92:	01 97       	sbiw	r24, 0x01	; 1
 d94:	f1 f7       	brne	.-4      	; 0xd92 <key8+0x142>
 d96:	00 c0       	rjmp	.+0      	; 0xd98 <key8+0x148>
 d98:	00 00       	nop
 d9a:	0b c0       	rjmp	.+22     	; 0xdb2 <key8+0x162>
			_delay_ms(30);
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
 d9c:	99 b3       	in	r25, 0x19	; 25
 d9e:	88 85       	ldd	r24, Y+8	; 0x08
 da0:	98 13       	cpse	r25, r24
 da2:	07 c0       	rjmp	.+14     	; 0xdb2 <key8+0x162>
 da4:	8c b5       	in	r24, 0x2c	; 44
 da6:	9d b5       	in	r25, 0x2d	; 45
 da8:	89 3e       	cpi	r24, 0xE9	; 233
 daa:	9d 4f       	sbci	r25, 0xFD	; 253
 dac:	10 f0       	brcs	.+4      	; 0xdb2 <key8+0x162>
		pressed=5;
 dae:	00 93 a5 00 	sts	0x00A5, r16	; 0x8000a5 <pressed>
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while(pressed==4)
 db2:	80 91 a5 00 	lds	r24, 0x00A5	; 0x8000a5 <pressed>
 db6:	84 30       	cpi	r24, 0x04	; 4
 db8:	d9 f2       	breq	.-74     	; 0xd70 <key8+0x120>
		}
		
		else if (PINA==pad[8]&&TCNT1>65000)
		pressed=5;
	}
	while(pressed==5&&PINA==pad[8])
 dba:	85 30       	cpi	r24, 0x05	; 5
 dbc:	91 f4       	brne	.+36     	; 0xde2 <key8+0x192>
 dbe:	99 b3       	in	r25, 0x19	; 25
 dc0:	80 91 68 00 	lds	r24, 0x0068	; 0x800068 <__data_start+0x8>
 dc4:	98 13       	cpse	r25, r24
 dc6:	0d c0       	rjmp	.+26     	; 0xde2 <key8+0x192>
	{
		z++;
 dc8:	80 91 a4 00 	lds	r24, 0x00A4	; 0x8000a4 <__data_end>
 dcc:	91 e0       	ldi	r25, 0x01	; 1
 dce:	98 0f       	add	r25, r24
 dd0:	90 93 a4 00 	sts	0x00A4, r25	; 0x8000a4 <__data_end>
		Send_A_Command(0x80+z)  ;
 dd4:	8f 57       	subi	r24, 0x7F	; 127
 dd6:	0e 94 5e 00 	call	0xbc	; 0xbc <Send_A_Command>
		TCNT1 = 0 ;
 dda:	1d bc       	out	0x2d, r1	; 45
 ddc:	1c bc       	out	0x2c, r1	; 44
		pressed=0 ;
 dde:	10 92 a5 00 	sts	0x00A5, r1	; 0x8000a5 <pressed>
 de2:	df 91       	pop	r29
 de4:	cf 91       	pop	r28
 de6:	1f 91       	pop	r17
 de8:	0f 91       	pop	r16
 dea:	08 95       	ret

00000dec <main>:
void key8(void);
char pad[9]={0b11111110,0b11111101,0b11111011,0b11110111,0b11101111,0b11011111,0b10111111,0b01111111,0b11111111} ;

int main(void)
	{
		DDRD |= 1<<EN | 1<<RW | 1<<RS;			//Make PORTD as an output to give it orders.
 dec:	81 b3       	in	r24, 0x11	; 17
 dee:	84 6a       	ori	r24, 0xA4	; 164
 df0:	81 bb       	out	0x11, r24	; 17
 df2:	85 ea       	ldi	r24, 0xA5	; 165
 df4:	9e e0       	ldi	r25, 0x0E	; 14
 df6:	01 97       	sbiw	r24, 0x01	; 1
 df8:	f1 f7       	brne	.-4      	; 0xdf6 <main+0xa>
 dfa:	00 c0       	rjmp	.+0      	; 0xdfc <main+0x10>
 dfc:	00 00       	nop
		_delay_ms(15);

		Send_A_Command(0b00000001);
 dfe:	81 e0       	ldi	r24, 0x01	; 1
 e00:	0e 94 5e 00 	call	0xbc	; 0xbc <Send_A_Command>
 e04:	8d ee       	ldi	r24, 0xED	; 237
 e06:	92 e0       	ldi	r25, 0x02	; 2
 e08:	01 97       	sbiw	r24, 0x01	; 1
 e0a:	f1 f7       	brne	.-4      	; 0xe08 <main+0x1c>
 e0c:	00 c0       	rjmp	.+0      	; 0xe0e <main+0x22>
 e0e:	00 00       	nop
		_delay_ms(3);
		Send_A_Command(0x38);
 e10:	88 e3       	ldi	r24, 0x38	; 56
 e12:	0e 94 5e 00 	call	0xbc	; 0xbc <Send_A_Command>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 e16:	90 e1       	ldi	r25, 0x10	; 16
 e18:	9a 95       	dec	r25
 e1a:	f1 f7       	brne	.-4      	; 0xe18 <main+0x2c>
 e1c:	00 c0       	rjmp	.+0      	; 0xe1e <main+0x32>
		_delay_us(50);
		Send_A_Command(0b00001110);
 e1e:	8e e0       	ldi	r24, 0x0E	; 14
 e20:	0e 94 5e 00 	call	0xbc	; 0xbc <Send_A_Command>
 e24:	80 e1       	ldi	r24, 0x10	; 16
 e26:	8a 95       	dec	r24
 e28:	f1 f7       	brne	.-4      	; 0xe26 <main+0x3a>
 e2a:	00 c0       	rjmp	.+0      	; 0xe2c <main+0x40>
		_delay_us(50);
		

		DDRA = 0x00;
 e2c:	1a ba       	out	0x1a, r1	; 26
		PORTA= 0xFF;
 e2e:	8f ef       	ldi	r24, 0xFF	; 255
 e30:	8b bb       	out	0x1b, r24	; 27
		TCCR1B = 1<<CS10 | 1<<CS11 ;
 e32:	83 e0       	ldi	r24, 0x03	; 3
 e34:	8e bd       	out	0x2e, r24	; 46
		
		
		while(1)
 {   
		pressed=0;
 		if (PINA==pad[0])   key1(); 
 e36:	c0 e6       	ldi	r28, 0x60	; 96
 e38:	d0 e0       	ldi	r29, 0x00	; 0
		
		
		
		while(1)
 {   
		pressed=0;
 e3a:	10 92 a5 00 	sts	0x00A5, r1	; 0x8000a5 <pressed>
 		if (PINA==pad[0])   key1(); 
 e3e:	99 b3       	in	r25, 0x19	; 25
 e40:	88 81       	ld	r24, Y
 e42:	98 13       	cpse	r25, r24
 e44:	02 c0       	rjmp	.+4      	; 0xe4a <main+0x5e>
 e46:	0e 94 86 00 	call	0x10c	; 0x10c <key1>
        if (PINA==pad[1])   key2();
 e4a:	99 b3       	in	r25, 0x19	; 25
 e4c:	89 81       	ldd	r24, Y+1	; 0x01
 e4e:	98 13       	cpse	r25, r24
 e50:	02 c0       	rjmp	.+4      	; 0xe56 <main+0x6a>
 e52:	0e 94 54 01 	call	0x2a8	; 0x2a8 <key2>
	    if (PINA==pad[2])   key3();	
 e56:	99 b3       	in	r25, 0x19	; 25
 e58:	8a 81       	ldd	r24, Y+2	; 0x02
 e5a:	98 13       	cpse	r25, r24
 e5c:	02 c0       	rjmp	.+4      	; 0xe62 <main+0x76>
 e5e:	0e 94 22 02 	call	0x444	; 0x444 <key3>
		if (PINA==pad[3])	key4();
 e62:	99 b3       	in	r25, 0x19	; 25
 e64:	8b 81       	ldd	r24, Y+3	; 0x03
 e66:	98 13       	cpse	r25, r24
 e68:	02 c0       	rjmp	.+4      	; 0xe6e <main+0x82>
 e6a:	0e 94 f0 02 	call	0x5e0	; 0x5e0 <key4>
		if (PINA==pad[4])   key5();
 e6e:	99 b3       	in	r25, 0x19	; 25
 e70:	8c 81       	ldd	r24, Y+4	; 0x04
 e72:	98 13       	cpse	r25, r24
 e74:	02 c0       	rjmp	.+4      	; 0xe7a <main+0x8e>
 e76:	0e 94 be 03 	call	0x77c	; 0x77c <key5>
		if (PINA==pad[5])   key6();
 e7a:	99 b3       	in	r25, 0x19	; 25
 e7c:	8d 81       	ldd	r24, Y+5	; 0x05
 e7e:	98 13       	cpse	r25, r24
 e80:	02 c0       	rjmp	.+4      	; 0xe86 <main+0x9a>
 e82:	0e 94 8c 04 	call	0x918	; 0x918 <key6>
		if (PINA==pad[6])	key7();
 e86:	99 b3       	in	r25, 0x19	; 25
 e88:	8e 81       	ldd	r24, Y+6	; 0x06
 e8a:	98 13       	cpse	r25, r24
 e8c:	02 c0       	rjmp	.+4      	; 0xe92 <main+0xa6>
 e8e:	0e 94 5a 05 	call	0xab4	; 0xab4 <key7>
		if (PINA==pad[7])	key8();
 e92:	99 b3       	in	r25, 0x19	; 25
 e94:	8f 81       	ldd	r24, Y+7	; 0x07
 e96:	98 13       	cpse	r25, r24
 e98:	d0 cf       	rjmp	.-96     	; 0xe3a <main+0x4e>
 e9a:	0e 94 28 06 	call	0xc50	; 0xc50 <key8>
 e9e:	cd cf       	rjmp	.-102    	; 0xe3a <main+0x4e>

00000ea0 <_exit>:
 ea0:	f8 94       	cli

00000ea2 <__stop_program>:
 ea2:	ff cf       	rjmp	.-2      	; 0xea2 <__stop_program>
